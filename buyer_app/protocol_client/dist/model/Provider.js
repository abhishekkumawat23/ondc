"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Provider = void 0;
var _ApiClient = require("../ApiClient");
var _Category = require("./Category");
var _Descriptor = require("./Descriptor");
var _Fulfillment = require("./Fulfillment");
var _Item = require("./Item");
var _Offer = require("./Offer");
var _Payment = require("./Payment");
var _ProviderId = require("./ProviderId");
var _Rateable = require("./Rateable");
var _RatingValue = require("./RatingValue");
var _Tags = require("./Tags");
var _Time = require("./Time");
var _AllOfProviderLocationsItems = require("./AllOfProviderLocationsItems");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Protocol API for retail (grocery, f&b)
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 1.0.13
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.46
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Provider model module.
 * @module model/Provider
 * @version 1.0.13
 */
var Provider = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Provider</code>.
   * Describes a service provider. This can be a restaurant, a hospital, a Store etc
   * @alias module:model/Provider
   * @class
   * @param id {module:model/ProviderId} 
   * @param descriptor {module:model/Descriptor} 
   * @param ondcorgfssaiLicenseNo {String} FSSAI license no. Mandatory for category_id \"F&B\"
   * @param ttl {String} Validity of catalog in ISO8601 durations format after which it has to be refreshed e.g. 'P7D' indicates validity of 7 days; value of 0 indicates catalog is not cacheable
   */
  function Provider(id, descriptor, ondcorgfssaiLicenseNo, ttl) {
    _classCallCheck(this, Provider);
    this.id = id;
    this.descriptor = descriptor;
    this.ondcorgfssaiLicenseNo = ondcorgfssaiLicenseNo;
    this.ttl = ttl;
  }

  /**
   * Constructs a <code>Provider</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Provider} obj Optional instance to populate.
   * @return {module:model/Provider} The populated <code>Provider</code> instance.
   */
  _createClass(Provider, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Provider();
        if (data.hasOwnProperty('id')) obj.id = _ProviderId.ProviderId.constructFromObject(data['id']);
        if (data.hasOwnProperty('descriptor')) obj.descriptor = _Descriptor.Descriptor.constructFromObject(data['descriptor']);
        if (data.hasOwnProperty('category_id')) obj.categoryId = _ApiClient.ApiClient.convertToType(data['category_id'], 'String');
        if (data.hasOwnProperty('@ondc/org/fssai_license_no')) obj.ondcorgfssaiLicenseNo = _ApiClient.ApiClient.convertToType(data['@ondc/org/fssai_license_no'], 'String');
        if (data.hasOwnProperty('rating')) obj.rating = _RatingValue.RatingValue.constructFromObject(data['rating']);
        if (data.hasOwnProperty('time')) obj.time = _Time.Time.constructFromObject(data['time']);
        if (data.hasOwnProperty('categories')) obj.categories = _ApiClient.ApiClient.convertToType(data['categories'], [_Category.Category]);
        if (data.hasOwnProperty('fulfillments')) obj.fulfillments = _ApiClient.ApiClient.convertToType(data['fulfillments'], [_Fulfillment.Fulfillment]);
        if (data.hasOwnProperty('payments')) obj.payments = _ApiClient.ApiClient.convertToType(data['payments'], [_Payment.Payment]);
        if (data.hasOwnProperty('locations')) obj.locations = _ApiClient.ApiClient.convertToType(data['locations'], [_AllOfProviderLocationsItems.AllOfProviderLocationsItems]);
        if (data.hasOwnProperty('offers')) obj.offers = _ApiClient.ApiClient.convertToType(data['offers'], [_Offer.Offer]);
        if (data.hasOwnProperty('items')) obj.items = _ApiClient.ApiClient.convertToType(data['items'], [_Item.Item]);
        if (data.hasOwnProperty('ttl')) obj.ttl = _ApiClient.ApiClient.convertToType(data['ttl'], 'String');
        if (data.hasOwnProperty('exp')) obj.exp = _ApiClient.ApiClient.convertToType(data['exp'], 'Date');
        if (data.hasOwnProperty('rateable')) obj.rateable = _Rateable.Rateable.constructFromObject(data['rateable']);
        if (data.hasOwnProperty('tags')) obj.tags = _Tags.Tags.constructFromObject(data['tags']);
      }
      return obj;
    }
  }]);
  return Provider;
}();
/**
 * @member {module:model/ProviderId} id
 */
exports.Provider = Provider;
Provider.prototype.id = undefined;

/**
 * @member {module:model/Descriptor} descriptor
 */
Provider.prototype.descriptor = undefined;

/**
 * Category Id of the provider
 * @member {String} categoryId
 */
Provider.prototype.categoryId = undefined;

/**
 * FSSAI license no. Mandatory for category_id \"F&B\"
 * @member {String} ondcorgfssaiLicenseNo
 */
Provider.prototype.ondcorgfssaiLicenseNo = undefined;

/**
 * @member {module:model/RatingValue} rating
 */
Provider.prototype.rating = undefined;

/**
 * @member {module:model/Time} time
 */
Provider.prototype.time = undefined;

/**
 * @member {Array.<module:model/Category>} categories
 */
Provider.prototype.categories = undefined;

/**
 * @member {Array.<module:model/Fulfillment>} fulfillments
 */
Provider.prototype.fulfillments = undefined;

/**
 * @member {Array.<module:model/Payment>} payments
 */
Provider.prototype.payments = undefined;

/**
 * @member {Array.<Object>} locations
 */
Provider.prototype.locations = undefined;

/**
 * @member {Array.<module:model/Offer>} offers
 */
Provider.prototype.offers = undefined;

/**
 * @member {Array.<module:model/Item>} items
 */
Provider.prototype.items = undefined;

/**
 * Validity of catalog in ISO8601 durations format after which it has to be refreshed e.g. 'P7D' indicates validity of 7 days; value of 0 indicates catalog is not cacheable
 * @member {String} ttl
 */
Provider.prototype.ttl = undefined;

/**
 * Time after which catalog has to be refreshed
 * @member {Date} exp
 */
Provider.prototype.exp = undefined;

/**
 * @member {module:model/Rateable} rateable
 */
Provider.prototype.rateable = undefined;

/**
 * @member {module:model/Tags} tags
 */
Provider.prototype.tags = undefined;