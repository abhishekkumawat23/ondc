/*
 * sandbox-client-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Billing2} from './Billing2';
import {Fulfillment1} from './Fulfillment1';
import {Item5} from './Item5';
import {Payment3} from './Payment3';
import {Provider5} from './Provider5';
import {Quote4} from './Quote4';

// TODO(7): id duplicity..

/**
 * The Order2 model module.
 * @module model/Order2
 * @version 1.0
 */
export class Order2 {
  /**
   * Constructs a new <code>Order2</code>.
   * @alias module:model/Order2
   * @class
   * @param id {String} 
   * @param transactionId {String} 
   * @param v {Number} 
   * @param addOns {Array.<String>} 
   * @param billing {module:model/Billing2} 
   * @param bppId {String} 
   * @param createdAt {String} 
   * @param fulfillment {module:model/Fulfillment1} 
   * @param items {Array.<module:model/Item5>} 
   * @param messageId {String} 
   * @param offers {Array.<String>} 
   * @param parentOrderId {String} 
   * @param payment {module:model/Payment3} 
   * @param paymentStatus {String} 
   * @param provider {module:model/Provider5} 
   * @param quote {module:model/Quote4} 
   * @param state {String} 
   * @param updatedAt {String} 
   * @param userId {String} 
   */
  constructor(id, transactionId, v, addOns, billing, bppId, createdAt, fulfillment, items, messageId, offers, parentOrderId, payment, paymentStatus, provider, quote, state, updatedAt, userId) {
    this.id = id;
    this.transactionId = transactionId;
    this.v = v;
    this.addOns = addOns;
    this.billing = billing;
    this.bppId = bppId;
    this.createdAt = createdAt;
    this.fulfillment = fulfillment;
    this.items = items;
    this.messageId = messageId;
    this.offers = offers;
    this.parentOrderId = parentOrderId;
    this.payment = payment;
    this.paymentStatus = paymentStatus;
    this.provider = provider;
    this.quote = quote;
    this.state = state;
    this.updatedAt = updatedAt;
    this.userId = userId;
  }

  /**
   * Constructs a <code>Order2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Order2} obj Optional instance to populate.
   * @return {module:model/Order2} The populated <code>Order2</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Order2();
      if (data.hasOwnProperty('_id'))
        obj.id = ApiClient.convertToType(data['_id'], 'String');
      if (data.hasOwnProperty('transactionId'))
        obj.transactionId = ApiClient.convertToType(data['transactionId'], 'String');
      if (data.hasOwnProperty('__v'))
        obj.v = ApiClient.convertToType(data['__v'], 'Number');
      if (data.hasOwnProperty('addOns'))
        obj.addOns = ApiClient.convertToType(data['addOns'], ['String']);
      if (data.hasOwnProperty('billing'))
        obj.billing = Billing2.constructFromObject(data['billing']);
      if (data.hasOwnProperty('bppId'))
        obj.bppId = ApiClient.convertToType(data['bppId'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('fulfillment'))
        obj.fulfillment = Fulfillment1.constructFromObject(data['fulfillment']);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [Item5]);
      if (data.hasOwnProperty('messageId'))
        obj.messageId = ApiClient.convertToType(data['messageId'], 'String');
      if (data.hasOwnProperty('offers'))
        obj.offers = ApiClient.convertToType(data['offers'], ['String']);
      if (data.hasOwnProperty('parentOrderId'))
        obj.parentOrderId = ApiClient.convertToType(data['parentOrderId'], 'String');
      if (data.hasOwnProperty('payment'))
        obj.payment = Payment3.constructFromObject(data['payment']);
      if (data.hasOwnProperty('paymentStatus'))
        obj.paymentStatus = ApiClient.convertToType(data['paymentStatus'], 'String');
      if (data.hasOwnProperty('provider'))
        obj.provider = Provider5.constructFromObject(data['provider']);
      if (data.hasOwnProperty('quote'))
        obj.quote = Quote4.constructFromObject(data['quote']);
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'String');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} transactionId
 */
Order2.prototype.transactionId = undefined;

/**
 * @member {Number} v
 */
Order2.prototype.v = undefined;

/**
 * @member {Array.<String>} addOns
 */
Order2.prototype.addOns = undefined;

/**
 * @member {module:model/Billing2} billing
 */
Order2.prototype.billing = undefined;

/**
 * @member {String} bppId
 */
Order2.prototype.bppId = undefined;

/**
 * @member {String} createdAt
 */
Order2.prototype.createdAt = undefined;

/**
 * @member {module:model/Fulfillment1} fulfillment
 */
Order2.prototype.fulfillment = undefined;

/**
 * @member {String} id
 */
Order2.prototype.id = undefined;

/**
 * @member {Array.<module:model/Item5>} items
 */
Order2.prototype.items = undefined;

/**
 * @member {String} messageId
 */
Order2.prototype.messageId = undefined;

/**
 * @member {Array.<String>} offers
 */
Order2.prototype.offers = undefined;

/**
 * @member {String} parentOrderId
 */
Order2.prototype.parentOrderId = undefined;

/**
 * @member {module:model/Payment3} payment
 */
Order2.prototype.payment = undefined;

/**
 * @member {String} paymentStatus
 */
Order2.prototype.paymentStatus = undefined;

/**
 * @member {module:model/Provider5} provider
 */
Order2.prototype.provider = undefined;

/**
 * @member {module:model/Quote4} quote
 */
Order2.prototype.quote = undefined;

/**
 * @member {String} state
 */
Order2.prototype.state = undefined;

/**
 * @member {String} updatedAt
 */
Order2.prototype.updatedAt = undefined;

/**
 * @member {String} userId
 */
Order2.prototype.userId = undefined;

