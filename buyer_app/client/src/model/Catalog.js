/*
 * sandbox-client-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BppDetails} from './BppDetails';
import {Descriptor} from './Descriptor';
import {LocationDetails} from './LocationDetails';
import {OndcOrgStatutoryReqsPackagedCommodities} from './OndcOrgStatutoryReqsPackagedCommodities';
import {Price} from './Price';
import {ProviderDetails} from './ProviderDetails';

/**
 * The Catalog model module.
 * @module model/Catalog
 * @version 1.0
 */
export class Catalog {
  /**
   * Constructs a new <code>Catalog</code>.
   * @alias module:model/Catalog
   * @class
   * @param id {Object} 
   * @param price {module:model/Price} 
   * @param matched {Boolean} 
   * @param descriptor {module:model/Descriptor} 
   * @param locationId {String} 
   * @param providerDetails {module:model/ProviderDetails} 
   * @param locationDetails {module:model/LocationDetails} 
   * @param categoryDetails {Object} 
   * @param fulfillmentDetails {Object} 
   * @param bppDetails {module:model/BppDetails} 
   */
  constructor(id, price, matched, descriptor, locationId, providerDetails, locationDetails, categoryDetails, fulfillmentDetails, bppDetails) {
    this.id = id;
    this.price = price;
    this.matched = matched;
    this.descriptor = descriptor;
    this.locationId = locationId;
    this.providerDetails = providerDetails;
    this.locationDetails = locationDetails;
    this.categoryDetails = categoryDetails;
    this.fulfillmentDetails = fulfillmentDetails;
    this.bppDetails = bppDetails;
  }

  /**
   * Constructs a <code>Catalog</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Catalog} obj Optional instance to populate.
   * @return {module:model/Catalog} The populated <code>Catalog</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Catalog();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], Object);
      if (data.hasOwnProperty('price'))
        obj.price = Price.constructFromObject(data['price']);
      if (data.hasOwnProperty('matched'))
        obj.matched = ApiClient.convertToType(data['matched'], 'Boolean');
      if (data.hasOwnProperty('descriptor'))
        obj.descriptor = Descriptor.constructFromObject(data['descriptor']);
      if (data.hasOwnProperty('category_id'))
        obj.categoryId = ApiClient.convertToType(data['category_id'], 'String');
      if (data.hasOwnProperty('location_id'))
        obj.locationId = ApiClient.convertToType(data['location_id'], 'String');
      if (data.hasOwnProperty('provider_details'))
        obj.providerDetails = ProviderDetails.constructFromObject(data['provider_details']);
      if (data.hasOwnProperty('location_details'))
        obj.locationDetails = LocationDetails.constructFromObject(data['location_details']);
      if (data.hasOwnProperty('category_details'))
        obj.categoryDetails = ApiClient.convertToType(data['category_details'], Object);
      if (data.hasOwnProperty('fulfillment_details'))
        obj.fulfillmentDetails = ApiClient.convertToType(data['fulfillment_details'], Object);
      if (data.hasOwnProperty('bpp_details'))
        obj.bppDetails = BppDetails.constructFromObject(data['bpp_details']);
      if (data.hasOwnProperty('@ondc/org/cancellable'))
        obj.ondcorgcancellable = ApiClient.convertToType(data['@ondc/org/cancellable'], 'Boolean');
      if (data.hasOwnProperty('@ondc/org/returnable'))
        obj.ondcorgreturnable = ApiClient.convertToType(data['@ondc/org/returnable'], 'Boolean');
      if (data.hasOwnProperty('@ondc/org/seller_pickup_return'))
        obj.ondcorgsellerPickupReturn = ApiClient.convertToType(data['@ondc/org/seller_pickup_return'], 'Boolean');
      if (data.hasOwnProperty('fulfillment_id'))
        obj.fulfillmentId = ApiClient.convertToType(data['fulfillment_id'], 'String');
      if (data.hasOwnProperty('related'))
        obj.related = ApiClient.convertToType(data['related'], 'Boolean');
      if (data.hasOwnProperty('recommended'))
        obj.recommended = ApiClient.convertToType(data['recommended'], 'Boolean');
      if (data.hasOwnProperty('@ondc/org/return_window'))
        obj.ondcorgreturnWindow = ApiClient.convertToType(data['@ondc/org/return_window'], 'String');
      if (data.hasOwnProperty('@ondc/org/available_on_cod'))
        obj.ondcorgavailableOnCod = ApiClient.convertToType(data['@ondc/org/available_on_cod'], 'Boolean');
      if (data.hasOwnProperty('@ondc/org/time_to_ship'))
        obj.ondcorgtimeToShip = ApiClient.convertToType(data['@ondc/org/time_to_ship'], 'String');
      if (data.hasOwnProperty('@ondc/org/net_quantity_or_measure_of_commodity_in_pkg'))
        obj.ondcorgnetQuantityOrMeasureOfCommodityInPkg = ApiClient.convertToType(data['@ondc/org/net_quantity_or_measure_of_commodity_in_pkg'], 'String');
      if (data.hasOwnProperty('@ondc/org/month_year_of_manufacture_packing_import'))
        obj.ondcorgmonthYearOfManufacturePackingImport = ApiClient.convertToType(data['@ondc/org/month_year_of_manufacture_packing_import'], 'String');
      if (data.hasOwnProperty('@ondc/org/imported_product_country_of_origin'))
        obj.ondcorgimportedProductCountryOfOrigin = ApiClient.convertToType(data['@ondc/org/imported_product_country_of_origin'], 'String');
      if (data.hasOwnProperty('@ondc/org/contact_details_consumer_care'))
        obj.ondcorgcontactDetailsConsumerCare = ApiClient.convertToType(data['@ondc/org/contact_details_consumer_care'], 'String');
      if (data.hasOwnProperty('AvailableQuantity'))
        obj.availableQuantity = ApiClient.convertToType(data['AvailableQuantity'], 'Number');
      if (data.hasOwnProperty('ProviderID'))
        obj.providerID = ApiClient.convertToType(data['ProviderID'], 'String');
      if (data.hasOwnProperty('@ondc/org/statutory_reqs_packaged_commodities'))
        obj.ondcorgstatutoryReqsPackagedCommodities = OndcOrgStatutoryReqsPackagedCommodities.constructFromObject(data['@ondc/org/statutory_reqs_packaged_commodities']);
    }
    return obj;
  }
}

/**
 * @member {Object} id
 */
Catalog.prototype.id = undefined;

/**
 * @member {module:model/Price} price
 */
Catalog.prototype.price = undefined;

/**
 * @member {Boolean} matched
 */
Catalog.prototype.matched = undefined;

/**
 * @member {module:model/Descriptor} descriptor
 */
Catalog.prototype.descriptor = undefined;

/**
 * @member {String} categoryId
 */
Catalog.prototype.categoryId = undefined;

/**
 * @member {String} locationId
 */
Catalog.prototype.locationId = undefined;

/**
 * @member {module:model/ProviderDetails} providerDetails
 */
Catalog.prototype.providerDetails = undefined;

/**
 * @member {module:model/LocationDetails} locationDetails
 */
Catalog.prototype.locationDetails = undefined;

/**
 * @member {Object} categoryDetails
 */
Catalog.prototype.categoryDetails = undefined;

/**
 * @member {Object} fulfillmentDetails
 */
Catalog.prototype.fulfillmentDetails = undefined;

/**
 * @member {module:model/BppDetails} bppDetails
 */
Catalog.prototype.bppDetails = undefined;

/**
 * @member {Boolean} ondcorgcancellable
 */
Catalog.prototype.ondcorgcancellable = undefined;

/**
 * @member {Boolean} ondcorgreturnable
 */
Catalog.prototype.ondcorgreturnable = undefined;

/**
 * @member {Boolean} ondcorgsellerPickupReturn
 */
Catalog.prototype.ondcorgsellerPickupReturn = undefined;

/**
 * @member {String} fulfillmentId
 */
Catalog.prototype.fulfillmentId = undefined;

/**
 * @member {Boolean} related
 */
Catalog.prototype.related = undefined;

/**
 * @member {Boolean} recommended
 */
Catalog.prototype.recommended = undefined;

/**
 * @member {String} ondcorgreturnWindow
 */
Catalog.prototype.ondcorgreturnWindow = undefined;

/**
 * @member {Boolean} ondcorgavailableOnCod
 */
Catalog.prototype.ondcorgavailableOnCod = undefined;

/**
 * @member {String} ondcorgtimeToShip
 */
Catalog.prototype.ondcorgtimeToShip = undefined;

/**
 * @member {String} ondcorgnetQuantityOrMeasureOfCommodityInPkg
 */
Catalog.prototype.ondcorgnetQuantityOrMeasureOfCommodityInPkg = undefined;

/**
 * @member {String} ondcorgmonthYearOfManufacturePackingImport
 */
Catalog.prototype.ondcorgmonthYearOfManufacturePackingImport = undefined;

/**
 * @member {String} ondcorgimportedProductCountryOfOrigin
 */
Catalog.prototype.ondcorgimportedProductCountryOfOrigin = undefined;

/**
 * @member {String} ondcorgcontactDetailsConsumerCare
 */
Catalog.prototype.ondcorgcontactDetailsConsumerCare = undefined;

/**
 * @member {Number} availableQuantity
 */
Catalog.prototype.availableQuantity = undefined;

/**
 * @member {String} providerID
 */
Catalog.prototype.providerID = undefined;

/**
 * @member {module:model/OndcOrgStatutoryReqsPackagedCommodities} ondcorgstatutoryReqsPackagedCommodities
 */
Catalog.prototype.ondcorgstatutoryReqsPackagedCommodities = undefined;

