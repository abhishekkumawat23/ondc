/*
 * sandbox-client-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {Cancelorder} from '../model/Cancelorder';
import {Cancelorderrequest} from '../model/Cancelorderrequest';
import {OncancelorderErrorresponse} from '../model/OncancelorderErrorresponse';

/**
* CancelOrder service.
* @module api/CancelOrderApi
* @version 1.0
*/
export class CancelOrderApi {

    /**
    * Constructs a new CancelOrderApi. 
    * @alias module:api/CancelOrderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the cancelorder operation.
     * @callback moduleapi/CancelOrderApi~cancelorderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Cancelorder{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * cancel order
     * @param {module:model/Cancelorderrequest} body 
     * @param {module:api/CancelOrderApi~cancelorderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    cancelorder(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling cancelorder");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Cancelorder;

      return this.apiClient.callApi(
        '/v1/cancel_order', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the oncancelorder operation.
     * @callback moduleapi/CancelOrderApi~oncancelorderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OncancelorderErrorresponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * on cancel order
     * @param {String} messageId 
     * @param {module:api/CancelOrderApi~oncancelorderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    oncancelorder(messageId, callback) {
      
      let postBody = null;
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling oncancelorder");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'messageId': messageId
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OncancelorderErrorresponse;

      return this.apiClient.callApi(
        '/v1/on_cancel_order', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}