"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Intent = void 0;
var _ApiClient = require("../ApiClient");
var _Category = require("./Category");
var _Descriptor = require("./Descriptor");
var _Fulfillment = require("./Fulfillment");
var _Item = require("./Item");
var _Offer = require("./Offer");
var _Payment = require("./Payment");
var _Provider = require("./Provider");
var _Tags = require("./Tags");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Protocol API for retail (grocery, f&b)
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 1.0.29
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.44
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Intent model module.
 * @module model/Intent
 * @version 1.0.29
 */
var Intent = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Intent</code>.
   * Intent of a user. Used for searching for services. Buyer App can set finder fee type in payment.\&quot;@ondc/org/buyer_app_finder_fee_type\&quot; and amount in \&quot;@ondc/org/buyer_app_finder_fee_amount\&quot;
   * @alias module:model/Intent
   * @class
   */
  function Intent() {
    _classCallCheck(this, Intent);
  }

  /**
   * Constructs a <code>Intent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Intent} obj Optional instance to populate.
   * @return {module:model/Intent} The populated <code>Intent</code> instance.
   */
  _createClass(Intent, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Intent();
        if (data.hasOwnProperty('descriptor')) obj.descriptor = _Descriptor.Descriptor.constructFromObject(data['descriptor']);
        if (data.hasOwnProperty('provider')) obj.provider = _Provider.Provider.constructFromObject(data['provider']);
        if (data.hasOwnProperty('fulfillment')) obj.fulfillment = _Fulfillment.Fulfillment.constructFromObject(data['fulfillment']);
        if (data.hasOwnProperty('payment')) obj.payment = _Payment.Payment.constructFromObject(data['payment']);
        if (data.hasOwnProperty('category')) obj.category = _Category.Category.constructFromObject(data['category']);
        if (data.hasOwnProperty('offer')) obj.offer = _Offer.Offer.constructFromObject(data['offer']);
        if (data.hasOwnProperty('item')) obj.item = _Item.Item.constructFromObject(data['item']);
        if (data.hasOwnProperty('tags')) obj.tags = _Tags.Tags.constructFromObject(data['tags']);
      }
      return obj;
    }
  }]);
  return Intent;
}();
/**
 * @member {module:model/Descriptor} descriptor
 */
exports.Intent = Intent;
Intent.prototype.descriptor = undefined;

/**
 * @member {module:model/Provider} provider
 */
Intent.prototype.provider = undefined;

/**
 * @member {module:model/Fulfillment} fulfillment
 */
Intent.prototype.fulfillment = undefined;

/**
 * @member {module:model/Payment} payment
 */
Intent.prototype.payment = undefined;

/**
 * @member {module:model/Category} category
 */
Intent.prototype.category = undefined;

/**
 * @member {module:model/Offer} offer
 */
Intent.prototype.offer = undefined;

/**
 * @member {module:model/Item} item
 */
Intent.prototype.item = undefined;

/**
 * @member {module:model/Tags} tags
 */
Intent.prototype.tags = undefined;