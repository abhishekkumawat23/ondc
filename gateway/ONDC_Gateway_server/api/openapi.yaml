openapi: 3.0.0
info:
  title: ONDC Gateway
  version: 1.0.0
externalDocs:
  description: "Contract between retail buyer and seller apps (change tracking here,\
    \ details in spec)"
  url: https://docs.google.com/document/d/12oMC4A05jT5rjCbY-M7j4T2oekr9bqcvSOpTI0jFEgE/edit
servers:
- url: http://localhost:8080/gateway
security:
- SubscriberAuth: []
- GatewaySubscriberAuth: []
- GatewaySubscriberAuthNew: []
paths:
  /search:
    post:
      tags:
      - ONDC Gateway
      description: Search for services by intent
      operationId: searchPOST
      requestBody:
        description: Buyer searches for products and services
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search_body'
            example:
              context:
                domain: "nic2004:52110"
                country: "IND"
                city: "std:080"
                action: "search"
                core_version: "0.9.3"
                bap_id: "buyer-app.ondc.org"
                bap_uri : "https://buyer-app.ondc.org/protocol/v1"
                transaction_id : "3e6802dc-055b-4a57-bcd4-d60d00213d8b"
                message_id : "c4b71e62-f51d-425a-892b-539920e945ca"
                timestamp: "2022-06-29T04:21:08.921Z"
              message:
                criteria:
                  search_string: "coffee"
                  delivery_location: "12.974002,77.613458"
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCGateway
  /on_search:
    post:
      tags:
      - ONDC Gateway
      description: Send catalog
      operationId: on_searchPOST
      requestBody:
        description: Sellers provide their catalog in response to buyer search
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_search_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: ONDCGateway
components:
  schemas:
    Ack:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: "Describe the status of the ACK response. If schema validation\
            \ passes, status is ACK else it is NACK"
          enum:
          - ACK
          - NACK
      description: Describes the ACK response
      example:
        status: ACK
    Address:
      type: object
      properties:
        door:
          type: string
          description: Door / Shop number of the address
        name:
          type: string
          description: "Name of address if applicable. Example, shop name"
        building:
          type: string
          description: Name of the building or block
        street:
          type: string
          description: Street name or number
        locality:
          type: string
          description: "Name of the locality, apartments"
        ward:
          type: string
          description: Name or number of the ward if applicable
        city:
          type: string
          description: City name
        state:
          type: string
          description: State name
        country:
          type: string
          description: Country name
        area_code:
          type: string
          description: "Area code. This can be Pincode, ZIP code or any equivalent"
      description: Describes an address
    Agent:
      description: Describes an order executor
      allOf:
      - $ref: '#/components/schemas/Person'
      - $ref: '#/components/schemas/Contact'
      - type: object
        properties:
          rateable:
            $ref: '#/components/schemas/Rateable'
    Authorization:
      type: object
      properties:
        type:
          type: string
          description: Type of authorization mechanism used
        token:
          type: string
          description: Token used for authorization
        valid_from:
          type: string
          description: Timestamp in RFC3339 format from which token is valid
          format: date-time
        valid_to:
          type: string
          description: Timestamp in RFC3339 format until which token is valid
          format: date-time
        status:
          type: string
          description: Status of the token
      description: Describes an authorization mechanism
    Catalog:
      required:
      - bpp/descriptor
      - bpp/providers
      type: object
      properties:
        bpp/descriptor:
          $ref: '#/components/schemas/Descriptor'
        bpp/categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        bpp/fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        bpp/payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        bpp/offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        bpp/providers:
          required:
          - Provider.fulfillments.id
          - Provider.fulfillments.type
          - Provider.locations.address.area_code
          - Provider.locations.address.city
          - Provider.locations.address.state
          - Provider.locations.address.street
          - Provider.locations.gps
          - Provider.locations.id
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
      description: Describes a Seller App catalog
    Category:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CategoryId'
        parent_category_id:
          type: string
          description: Unique id of the parent category
          enum:
          - Grocery
          - F&B
          - Home & Decor
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        time:
          $ref: '#/components/schemas/Time'
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes a category
    CategoryId:
      type: string
      description: Unique id of the category
      enum:
      - Grocery
      - Packaged Commodities
      - Packaged Foods
      - Fruits and Vegetables
      - F&B
      - Home & Decor
    Circle:
      required:
      - gps
      - radius
      type: object
      properties:
        gps:
          $ref: '#/components/schemas/Gps'
        radius:
          $ref: '#/components/schemas/Scalar'
      description: Describes a circular area on the map
    City:
      type: object
      properties:
        name:
          type: string
          description: Name of the city
        code:
          $ref: '#/components/schemas/CityCode'
      description: Describes a city
    CityCode:
      type: string
      description: "Codification of city code will be using the std code of the\
      \ city e.g. for Bengaluru, city code is 'std:080'"
    Contact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
    Context:
      required:
      - action
      - bap_id
      - bap_uri
      - city
      - core_version
      - country
      - domain
      - message_id
      - timestamp
      - transaction_id
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        country:
          $ref: '#/components/schemas/CountryCode'
        city:
          $ref: '#/components/schemas/CityCode'
        action:
          type: string
          description: Defines the ONDC API call. Any actions other than the enumerated
            actions are not supported by ONDC Protocol
          enum:
          - search
          - on_search
        core_version:
          type: string
          description: Version of ONDC core API specification being used
        bap_id:
          type: string
          description: Unique id of the Buyer App. By default it is the fully qualified
            domain name of the Buyer App
        bap_uri:
          type: string
          description: URI of the Buyer App for accepting callbacks. Must have the
            same domain name as the bap_id
          format: uri
        bpp_id:
          type: string
          description: "Unique id of the Seller App. By default it is the fully qualified\
            \ domain name of the Seller App, mandatory for all peer-to-peer API requests,\
            \ i.e. except search and on_search"
        bpp_uri:
          type: string
          description: "URI of the Seller App. Must have the same domain name as the\
            \ bap_id, mandatory for all peer-to-peer API requests, i.e. except search\
            \ and on_search"
          format: uri
        transaction_id:
          type: string
          description: This is a unique value which persists across all API calls
            from search through confirm
        message_id:
          type: string
          description: This is a unique value which persists during a request / callback
            cycle
        timestamp:
          type: string
          description: Time of request generation in RFC3339 format
          format: date-time
        key:
          type: string
          description: The encryption public key of the sender
        ttl:
          type: string
          description: "Timestamp for which this message holds valid in ISO8601 durations\
            \ format - Outer limit for ttl for search, select, init, confirm, status,\
            \ track, cancel, update, rating, support is 'PT30S' which is 30 seconds,\
            \ different buyer apps can change this to meet their UX requirements,\
            \ but it shouldn't exceed this outer limit"
      description: Describes a ONDC message context
    Country:
      type: object
      properties:
        name:
          type: string
          description: Name of the country
        code:
          $ref: '#/components/schemas/CountryCode'
      description: Describes a country.
    CountryCode:
      type: string
      description: Country code as per ISO 3166 Alpha-3 code format
    DecimalValue:
      pattern: "[+-]?([0-9]*[.])?[0-9]+"
      type: string
      description: Describes a decimal value
    Descriptor:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        symbol:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        audio:
          type: string
          format: uri
        "3d_render":
          type: string
          format: uri
      description: Describes the description of a real-world object.
    Domain:
      type: string
      description: Codification of domain for ONDC
      enum:
      - nic2004:52110
    Duration:
      type: string
      description: Describes duration as per ISO8601 format
    Error:
      required:
      - code
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - CONTEXT-ERROR
          - CORE-ERROR
          - DOMAIN-ERROR
          - POLICY-ERROR
          - JSON-SCHEMA-ERROR
        code:
          type: string
          description: "ONDC specific error code. For full list of error codes, refer\
            \ to docs/drafts/Error Codes.md of this repo"
        path:
          type: string
          description: Path to json schema generating the error. Used only during
            json schema validation errors
        message:
          type: string
          description: Human readable message describing the error
      description: Describes an error object
      example:
        path: path
        code: code
        type: CONTEXT-ERROR
        message: message
    Fulfillment:
      required:
      - id
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FulfillmentId'
        type:
          type: string
          description: This describes the type of fulfillment ("Pickup" - Buyer picks
            up from store by themselves or through their logistics provider; "Delivery"
            - seller delivers to buyer)
          enum:
          - Delivery
          - Pickup
          - Delivery and Pickup
          - Reverse QC
        '@ondc/org/category':
          type: string
          description: Fulfillment Category
        '@ondc/org/TAT':
          type: string
          description: fulfillment turnaround time in ISO8601 durations format e.g.
            'PT24H' indicates 24 hour TAT
        provider_id:
          $ref: '#/components/schemas/Provider/properties/id'
        '@ondc/org/provider_name':
          type: string
        state:
          $ref: '#/components/schemas/State'
        tracking:
          type: boolean
          description: Indicates whether the fulfillment allows tracking
          default: false
        customer:
          $ref: '#/components/schemas/Fulfillment_customer'
        agent:
          $ref: '#/components/schemas/Agent'
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        start:
          $ref: '#/components/schemas/Fulfillment_start'
        end:
          $ref: '#/components/schemas/Fulfillment_end'
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'
      description: "Describes how a single product/service will be rendered/fulfilled\
        \ to the end customer - State can have following values - \"Serviceable\"\
        , \"Non-serviceable\", \"At pickup location\", \"Order picked up\", \"At drop\
        \ location\", \"Order delivered\", \"Cancelled\""
    FulfillmentId:
      type: string
      description: Unique reference ID to the fulfillment of an order
    Gps:
      pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\\
        d)|([1-9]?\\d))(\\.\\d+)?)$"
      type: string
      description: Describes a gps coordinate
    Image:
      type: string
      description: "Image of an object. <br/><br/> A url based image will look like\
        \ <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be\
        \ sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
    Intent:
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        provider:
          $ref: '#/components/schemas/Provider'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        payment:
          $ref: '#/components/schemas/Payment'
        category:
          $ref: '#/components/schemas/Category'
        offer:
          $ref: '#/components/schemas/Offer'
        item:
          $ref: '#/components/schemas/Item'
        tags:
          $ref: '#/components/schemas/Tags'
      description: Intent of a user. Used for searching for services. Buyer App can
        set finder fee type in payment."@ondc/org/buyer_app_finder_fee_type" and amount
        in "@ondc/org/buyer_app_finder_fee_amount"
    Item:
      required:
      - '@ondc/org/available_on_cod'
      - '@ondc/org/cancellable'
      - '@ondc/org/contact_details_consumer_care'
      - '@ondc/org/mandatory_reqs_veggies_fruits'
      - '@ondc/org/return_window'
      - '@ondc/org/returnable'
      - '@ondc/org/seller_pickup_return'
      - '@ondc/org/statutory_reqs_packaged_commodities'
      - '@ondc/org/statutory_reqs_prepackaged_food'
      - '@ondc/org/time_to_ship'
      - category_id
      - descriptor
      - fulfillment_id
      - id
      - location_id
      - matched
      - price
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ItemId'
        parent_item_id:
          $ref: '#/components/schemas/Item/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
        category_id:
          $ref: '#/components/schemas/CategoryId'
        fulfillment_id:
          $ref: '#/components/schemas/FulfillmentId'
        location_id:
          $ref: '#/components/schemas/LocationId'
        time:
          $ref: '#/components/schemas/Time'
        rateable:
          $ref: '#/components/schemas/Rateable'
        matched:
          type: boolean
        related:
          type: boolean
        recommended:
          type: boolean
        '@ondc/org/returnable':
          type: boolean
          description: whether the item is returnable
        '@ondc/org/seller_pickup_return':
          type: boolean
          description: "in case of return, whether the item should be picked up by\
            \ seller"
        '@ondc/org/return_window':
          type: string
          description: return window for the item in ISO8601 durations format e.g.
            'PT24H' indicates 24 hour return window. Mandatory if "@ondc/org/returnable"
            is "true"
        '@ondc/org/cancellable':
          type: boolean
          description: whether the item is cancellable
        '@ondc/org/time_to_ship':
          type: string
          description: time from order confirmation by which item ready to ship in
            ISO8601 durations format (e.g. 'PT30M' indicates item ready to ship in
            30 mins). Mandatory for category_id "F&B"
        '@ondc/org/available_on_cod':
          type: boolean
          description: whether the catalog item is available on COD
        '@ondc/org/contact_details_consumer_care':
          type: string
          description: contact details for consumer care
        '@ondc/org/statutory_reqs_packaged_commodities':
          $ref: '#/components/schemas/Item_ondcorgstatutory_reqs_packaged_commodities'
        '@ondc/org/statutory_reqs_prepackaged_food':
          $ref: '#/components/schemas/Item_ondcorgstatutory_reqs_prepackaged_food'
        '@ondc/org/mandatory_reqs_veggies_fruits':
          type: object
          description: mandatory for category_id "Fruits and Vegetables" required
            attributes include the following - net_quantity
        tags:
          $ref: '#/components/schemas/Tags'
      description: "Describes a product or a service offered to the end consumer by\
        \ the provider - Statutory requirements for category_id \"Packaged Commodities\"\
        \ - descriptor.name (for item name), price.value (for declared price), price.maximum_value\
        \ (for MRP); Statutory requirements for category_id \"Packaged Foods\" - descriptor.name\
        \ (for item name), descriptor.symbol (for veg or non-veg), descriptor.short_desc\
        \ (for food allergen), descriptor.long_desc (for instructions for use), price.value\
        \ (for declared price); All other statutory attributes must be provided, as\
        \ applicable, for the above; No statutory requirement for category_id \"F&B\"\
        \ or \"Fruits and Vegetables\""
    ItemId:
      type: string
      description: This is the most unique identifier of a service item. An example
        of an Item ID could be the SKU of a product.
    Location:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LocationId'
          descriptor:
            $ref: '#/components/schemas/Descriptor'
        gps:
          $ref: '#/components/schemas/Gps'
        address:
          $ref: '#/components/schemas/Address'
        station_code:
          type: string
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
        circle:
          $ref: '#/components/schemas/Circle'
        polygon:
          type: string
        "3dspace":
          type: string
        time:
          $ref: '#/components/schemas/Time'
      description: Describes the location of a runtime object.
    LocationId:
      type: string
    Name:
      pattern: "^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$"
      type: string
      description: "Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}"
    Offer:
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        location_ids:
          type: array
          items:
            $ref: '#/components/schemas/LocationId'
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/CategoryId'
        item_ids:
          type: array
          items:
            $ref: '#/components/schemas/ItemId'
        time:
          $ref: '#/components/schemas/Time'
      description: Describes an offer
    Payment:
      type: object
      properties:
        uri:
          type: string
          description: "A payment uri to be called by the Buyer App. If empty, then\
            \ the payment is to be done offline. The details of payment should be\
            \ present in the params object. If ```tl_method``` = http/get, then the\
            \ payment details will be sent as url params. Two url param values, ```$transaction_id```\
            \ and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234"
          format: uri
        tl_method:
          type: string
          enum:
          - http/get
          - http/post
          - payto
          - upi
        params:
          $ref: '#/components/schemas/Payment_params'
        type:
          type: string
          enum:
          - ON-ORDER
          - PRE-FULFILLMENT
          - ON-FULFILLMENT
          - POST-FULFILLMENT
        status:
          type: string
          enum:
          - PAID
          - NOT-PAID
          - PENDING
        time:
          $ref: '#/components/schemas/Time'
        collected_by:
          type: string
          enum:
          - BAP
          - BPP
        '@ondc/org/collected_by_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/buyer_app_finder_fee_type':
          type: string
          enum:
          - Amount
          - Percent
        '@ondc/org/buyer_app_finder_fee_amount':
          $ref: '#/components/schemas/DecimalValue'
        '@ondc/org/withholding_amount':
          $ref: '#/components/schemas/DecimalValue'
        '@ondc/org/withholding_amount_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/return_window':
          type: string
          description: return window for withholding amount in ISO8601 durations format
            e.g. 'PT24H' indicates 24 hour return window
        '@ondc/org/return_window_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/settlement_basis':
          type: string
          description: "In case of prepaid payment, whether settlement between counterparties\
            \ should be on the basis of collection, shipment or delivery"
          enum:
          - Collection
          - Shipment
          - Delivery
        '@ondc/org/settlement_basis_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/settlement_window':
          type: string
          description: settlement window for the counterparty in ISO8601 durations
            format e.g. 'PT48H' indicates 48 hour return window
        '@ondc/org/settlement_window_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/settlement_details':
          type: array
          items:
            $ref: '#/components/schemas/Payment_ondcorgsettlement_details'
      description: Describes a payment
    Person:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        image:
          $ref: '#/components/schemas/Image'
        dob:
          type: string
          format: date
        gender:
          type: string
          description: "Gender of something, typically a Person, but possibly also\
            \ fictional characters, animals, etc. While Male and Female may be used,\
            \ text strings are also acceptable for people who do not identify as a\
            \ binary gender"
        cred:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes a person.
    Currency:
      type: string
      description: ISO 4217 alphabetic currency code e.g. 'INR'
    Price:
      required:
      - currency
      - value
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        value:
          $ref: '#/components/schemas/DecimalValue'
        estimated_value:
          $ref: '#/components/schemas/DecimalValue'
        computed_value:
          $ref: '#/components/schemas/DecimalValue'
        listed_value:
          $ref: '#/components/schemas/DecimalValue'
        offered_value:
          $ref: '#/components/schemas/DecimalValue'
        minimum_value:
          $ref: '#/components/schemas/DecimalValue'
        maximum_value:
          $ref: '#/components/schemas/DecimalValue'
      description: Describes the price of an item. Allows for domain extension.
    Provider:
      required:
      - '@ondc/org/fssai_license_no'
      - descriptor
      - id
      - ttl
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProviderId'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        category_id:
          type: string
          description: Category Id of the provider
        '@ondc/org/fssai_license_no':
          type: string
          description: FSSAI license no. Mandatory for category_id "F&B"
        time:
          $ref: '#/components/schemas/Time'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        locations:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Location'
            - type: object
              properties:
                rateable:
                  $ref: '#/components/schemas/Rateable'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        ttl:
          type: string
          description: Validity of catalog in ISO8601 durations format after which
            it has to be refreshed e.g. 'P7D' indicates validity of 7 days; value
            of 0 indicates catalog is not cacheable
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'
      description: "Describes a service provider. This can be a restaurant, a hospital,\
        \ a Store etc"
    ProviderId:
      type: string
      description: Id of the provider
    Rateable:
      type: boolean
      description: If the entity can be rated or not
    Scalar:
      required:
      - unit
      - value
      type: object
      properties:
        type:
          type: string
          enum:
          - CONSTANT
          - VARIABLE
        value:
          type: number
        estimated_value:
          type: number
        computed_value:
          type: number
        range:
          $ref: '#/components/schemas/Scalar_range'
        unit:
          type: string
      description: An object representing a scalar quantity.
    Schedule:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/Duration'
        holidays:
          type: array
          items:
            type: string
            format: date-time
        times:
          type: array
          items:
            type: string
            format: date-time
      description: Describes a schedule
    State:
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          description: ID of entity which changed the state
      description: Describes a state
    Tags:
      type: object
      additionalProperties:
        type: string
      description: Describes a tag. This is a simple key-value store which is used
        to contain extended metadata
    Time:
      type: object
      properties:
        label:
          type: string
        timestamp:
          type: string
          format: date-time
        duration:
          $ref: '#/components/schemas/Duration'
        range:
          $ref: '#/components/schemas/Time_range'
        days:
          type: string
          description: comma separated values representing days of the week
        schedule:
          $ref: '#/components/schemas/Schedule'
      description: Describes time in its various forms. It can be a single point in
        time; duration; or a structured timetable of operations
    Vehicle:
      type: object
      properties:
        category:
          type: string
        capacity:
          type: integer
        make:
          type: string
        model:
          type: string
        size:
          type: string
        variant:
          type: string
        color:
          type: string
        energy_type:
          type: string
        registration:
          type: string
      description: Describes the properties of a vehicle used in a mobility service
    search_message:
      type: object
      properties:
        intent:
          $ref: '#/components/schemas/Intent'
    search_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/search_message'
    inline_response_200:
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/inline_response_200_message'
        error:
          $ref: '#/components/schemas/Error'
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
    on_search_message:
      required:
      - catalog
      type: object
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
    on_search_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_search_message'
        error:
          $ref: '#/components/schemas/Error'
    inline_response_200_1:
      required:
      - context
      type: object
      properties:
        message:
          $ref: '#/components/schemas/inline_response_200_message'
        error:
          $ref: '#/components/schemas/Error'
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
    Fulfillment_customer:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
    Fulfillment_start:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      description: Details on the start of fulfillment
    Fulfillment_end:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      description: Details on the end of fulfillment
    Item_ondcorgstatutory_reqs_packaged_commodities:
      type: object
      properties:
        manufacturer_or_packer_name:
          type: string
          description: name of manufacturer or packer (in case manufacturer is not
            the packer) or name of importer for imported goods
        manufacturer_or_packer_address:
          type: string
          description: address of manufacturer or packer (in case manufacturer is
            not the packer) or address of importer for imported goods
        common_or_generic_name_of_commodity:
          type: string
          description: common or generic name of commodity
        multiple_products_name_number_or_qty:
          type: string
          description: "for packages with multiple products, the name and number of\
            \ quantity of each (can be shown as \"name1-number_or_quantity; name2-number_or_quantity..\"\
            )"
        net_quantity_or_measure_of_commodity_in_pkg:
          type: string
          description: net quantity of commodity in terms of standard unit of weight
            or measure of commodity contained in package
        month_year_of_manufacture_packing_import:
          type: string
          description: month and year of manufacture or packing or import
        imported_product_country_of_origin:
          type: string
          description: country of origin for imported products (ISO 3166 Alpha-3 code
            format)
      description: "mandatory for category_id \"Packaged Commodities\" - required\
        \ attributes for all include the following - manufacturer_or_packer_name,\
        \ manufacturer_or_packer_address, common_or_generic_name_of_commodity, net_quantity_or_measure_of_commodity_in_pkg,\
        \ month_year_of_manufacture_packing_import; other attributes are required\
        \ on case-by-case basis"
    Item_ondcorgstatutory_reqs_prepackaged_food:
      type: object
      properties:
        ingredients_info:
          type: string
          description: "list of ingredients (except single ingredient foods), can\
            \ be shown as ingredient (with percentage); ingredient (with percentage);..)\
            \ e.g. \"Puffed Rice (40%); Split Green Gram (20%); Ground Nuts (20%);..\""
        nutritional_info:
          type: string
          description: "nutritional info (can be shown as nutritional info (with unit,\
            \ per standard unit, per serving);..) e.g. \"Energy(KCal) - (per 100kg)\
            \ 420, (per serving 50g) 250; Protein(g) - (per 100kg) 12, (per serving\
            \ 50g)6;..\""
        additives_info:
          type: string
          description: food additives together with specific name or recognized International
            Numbering System (can be shown as additive1-name or number;additive2-name
            or number;..)
        manufacturer_or_packer_name:
          type: string
          description: name of manufacturer or packer (for non-retail containers)
        manufacturer_or_packer_address:
          type: string
          description: address of manufacturer or packer (for non-retail containers)
        brand_owner_name:
          type: string
          description: name of brand owner
        brand_owner_address:
          type: string
          description: address of brand owner
        brand_owner_FSSAI_logo:
          type: string
          description: FSSAI logo of brand owner (url based image e.g. uri:http://path/to/image)
        brand_owner_FSSAI_license_no:
          type: string
          description: FSSAI license no of brand owner
        other_FSSAI_license_no:
          type: string
          description: FSSAI license no of manufacturer or marketer or packer or bottler
            if different from brand owner
        net_quantity:
          type: string
          description: net quantity
        importer_name:
          type: string
          description: name of importer
        importer_address:
          type: string
          description: address of importer
        importer_FSSAI_logo:
          type: string
          description: FSSAI logo of importer (url based image e.g. uri:http://path/to/image)
        importer_FSSAI_license_no:
          type: string
          description: FSSAI license no of importer
        imported_product_country_of_origin:
          type: string
          description: country of origin for imported products (ISO 3166 Alpha-3 code
            format)
        other_importer_name:
          type: string
          description: name of importer for product manufactured outside but packaged
            or bottled in India
        other_importer_address:
          type: string
          description: address of importer for product manufactured outside but packaged
            or bottled in India
        other_premises:
          type: string
          description: premises where product manufactured outside are packaged or
            bottled in India
        other_importer_country_of_origin:
          type: string
          description: country of origin for product manufactured outside but packaged
            or bottled in India (ISO 3166 Alpha-3 code format)
      description: "mandatory for category_id \"Packaged food\" - required attributes\
        \ include the following - nutritional_info, additives_info, net_quantity;\
        \ other attributes are required on case-by-case basis"
    Payment_params:
      required:
      - currency
      type: object
      properties:
        transaction_id:
          type: string
          description: This value will be placed in the the $transaction_id url param
            in case of http/get and in the requestBody http/post requests
        transaction_status:
          type: string
        amount:
          $ref: '#/components/schemas/Price/properties/value'
        currency:
          $ref: '#/components/schemas/Currency'
      additionalProperties:
        type: string
    Payment_ondcorgsettlement_details:
      type: object
      properties:
        settlement_counterparty:
          type: string
          enum:
          - buyer
          - buyer-app
          - seller-app
          - logistics-provider
        settlement_phase:
          type: string
          enum:
          - sale-amount
          - withholding-amount
          - refund
        settlement_amount:
          type: integer
        settlement_type:
          type: string
          enum:
          - neft
          - rtgs
          - upi
        settlement_bank_account_no:
          type: string
        settlement_ifsc_code:
          type: string
        upi_address:
          type: string
          description: UPI payment address e.g. VPA
        bank_name:
          type: string
          description: Bank name
        branch_name:
          type: string
          description: Branch name
        beneficiary_address:
          type: string
          description: Beneficiary Address
        settlement_status:
          type: string
          enum:
          - PAID
          - NOT-PAID
        settlement_reference:
          type: string
          description: Settlement transaction reference number
        settlement_timestamp:
          type: string
          description: Settlement transaction timestamp
          format: date-time
    Scalar_range:
      type: object
      properties:
        min:
          type: number
        max:
          type: number
    Time_range:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    inline_response_200_message:
      required:
      - ack
      type: object
      properties:
        ack:
          $ref: '#/components/schemas/Ack'
      example:
        ack:
          status: ACK
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      description: "Signature of message body using Buyer App or Seller App subscriber's\
        \ signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature\
        \ keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\"\
        ,created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires)\
        \ digest\",signature=\"Base64(signing string)\"</code>"
      name: Authorization
      in: header
    GatewaySubscriberAuth:
      type: apiKey
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>Proxy-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code><p><b>Note:</b>This\
        \ header will be deprecated soon and will no longer be supported in future\
        \ releases. New implementors are requested to use the X-Gateway-Authorization\
        \ header. Existing implementations are requested to migrate their header to\
        \ the new header. The deprecation date will be set after discussion as per\
        \ the standard specification governance process.</p>"
      name: Proxy-Authorization
      in: header
    GatewaySubscriberAuthNew:
      type: apiKey
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>X-Gateway-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code>"
      name: X-Gateway-Authorization
      in: header
