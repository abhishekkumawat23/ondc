/*
 * ONDC Protocol Core API
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Agent} from './Agent';
import {Contact} from './Contact';
import {FulfillmentCustomer} from './FulfillmentCustomer';
import {FulfillmentEnd} from './FulfillmentEnd';
import {FulfillmentStart} from './FulfillmentStart';
import {Person} from './Person';
import {Providerpropertiesid} from './Providerpropertiesid';
import {Rateable} from './Rateable';
import {Ratingpropertiesvalue} from './Ratingpropertiesvalue';
import {State} from './State';
import {Tags} from './Tags';
import {Vehicle} from './Vehicle';

/**
 * The Fulfillment model module.
 * @module model/Fulfillment
 * @version 1.0.0
 */
export class Fulfillment {
  /**
   * Constructs a new <code>Fulfillment</code>.
   * Describes how a single product/service will be rendered/fulfilled to the end customer
   * @alias module:model/Fulfillment
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Fulfillment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Fulfillment} obj Optional instance to populate.
   * @return {module:model/Fulfillment} The populated <code>Fulfillment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Fulfillment();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('provider_id'))
        obj.providerId = Providerpropertiesid.constructFromObject(data['provider_id']);
      if (data.hasOwnProperty('rating'))
        obj.rating = Ratingpropertiesvalue.constructFromObject(data['rating']);
      if (data.hasOwnProperty('state'))
        obj.state = State.constructFromObject(data['state']);
      if (data.hasOwnProperty('tracking'))
        obj.tracking = ApiClient.convertToType(data['tracking'], 'Boolean');
      if (data.hasOwnProperty('customer'))
        obj.customer = FulfillmentCustomer.constructFromObject(data['customer']);
      if (data.hasOwnProperty('agent'))
        obj.agent = Agent.constructFromObject(data['agent']);
      if (data.hasOwnProperty('person'))
        obj.person = Person.constructFromObject(data['person']);
      if (data.hasOwnProperty('contact'))
        obj.contact = Contact.constructFromObject(data['contact']);
      if (data.hasOwnProperty('vehicle'))
        obj.vehicle = Vehicle.constructFromObject(data['vehicle']);
      if (data.hasOwnProperty('start'))
        obj.start = FulfillmentStart.constructFromObject(data['start']);
      if (data.hasOwnProperty('end'))
        obj.end = FulfillmentEnd.constructFromObject(data['end']);
      if (data.hasOwnProperty('rateable'))
        obj.rateable = Rateable.constructFromObject(data['rateable']);
      if (data.hasOwnProperty('tags'))
        obj.tags = Tags.constructFromObject(data['tags']);
    }
    return obj;
  }
}

/**
 * Unique reference ID to the fulfillment of an order
 * @member {String} id
 */
Fulfillment.prototype.id = undefined;

/**
 * This describes the type of fulfillment
 * @member {String} type
 */
Fulfillment.prototype.type = undefined;

/**
 * @member {module:model/Providerpropertiesid} providerId
 */
Fulfillment.prototype.providerId = undefined;

/**
 * @member {module:model/Ratingpropertiesvalue} rating
 */
Fulfillment.prototype.rating = undefined;

/**
 * @member {module:model/State} state
 */
Fulfillment.prototype.state = undefined;

/**
 * Indicates whether the fulfillment allows tracking
 * @member {Boolean} tracking
 * @default false
 */
Fulfillment.prototype.tracking = false;

/**
 * @member {module:model/FulfillmentCustomer} customer
 */
Fulfillment.prototype.customer = undefined;

/**
 * @member {module:model/Agent} agent
 */
Fulfillment.prototype.agent = undefined;

/**
 * @member {module:model/Person} person
 */
Fulfillment.prototype.person = undefined;

/**
 * @member {module:model/Contact} contact
 */
Fulfillment.prototype.contact = undefined;

/**
 * @member {module:model/Vehicle} vehicle
 */
Fulfillment.prototype.vehicle = undefined;

/**
 * @member {module:model/FulfillmentStart} start
 */
Fulfillment.prototype.start = undefined;

/**
 * @member {module:model/FulfillmentEnd} end
 */
Fulfillment.prototype.end = undefined;

/**
 * @member {module:model/Rateable} rateable
 */
Fulfillment.prototype.rateable = undefined;

/**
 * @member {module:model/Tags} tags
 */
Fulfillment.prototype.tags = undefined;

