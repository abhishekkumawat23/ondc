/*
 * ONDC Protocol Core API
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {PaymentParams} from './PaymentParams';
import {Time} from './Time';

/**
 * The Payment model module.
 * @module model/Payment
 * @version 1.0.0
 */
export class Payment {
  /**
   * Constructs a new <code>Payment</code>.
   * Describes a payment
   * @alias module:model/Payment
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Payment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Payment} obj Optional instance to populate.
   * @return {module:model/Payment} The populated <code>Payment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Payment();
      if (data.hasOwnProperty('uri'))
        obj.uri = ApiClient.convertToType(data['uri'], 'String');
      if (data.hasOwnProperty('tl_method'))
        obj.tlMethod = ApiClient.convertToType(data['tl_method'], 'String');
      if (data.hasOwnProperty('params'))
        obj.params = PaymentParams.constructFromObject(data['params']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('time'))
        obj.time = Time.constructFromObject(data['time']);
      if (data.hasOwnProperty('collected_by'))
        obj.collectedBy = ApiClient.convertToType(data['collected_by'], 'String');
    }
    return obj;
  }
}

/**
 * A payment uri to be called by the Buyer App. If empty, then the payment is to be done offline. The details of payment should be present in the params object. If ```tl_method``` = http/get, then the payment details will be sent as url params. Two url param values, ```$transaction_id``` and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234
 * @member {String} uri
 */
Payment.prototype.uri = undefined;

/**
 * Allowed values for the <code>tlMethod</code> property.
 * @enum {String}
 * @readonly
 */
Payment.TlMethodEnum = {
  /**
   * value: "http/get"
   * @const
   */
  httpget: "http/get",

  /**
   * value: "http/post"
   * @const
   */
  httppost: "http/post",

  /**
   * value: "payto"
   * @const
   */
  payto: "payto",

  /**
   * value: "upi"
   * @const
   */
  upi: "upi"
};
/**
 * @member {module:model/Payment.TlMethodEnum} tlMethod
 */
Payment.prototype.tlMethod = undefined;

/**
 * @member {module:model/PaymentParams} params
 */
Payment.prototype.params = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Payment.TypeEnum = {
  /**
   * value: "ON-ORDER"
   * @const
   */
  ON_ORDER: "ON-ORDER",

  /**
   * value: "PRE-FULFILLMENT"
   * @const
   */
  PRE_FULFILLMENT: "PRE-FULFILLMENT",

  /**
   * value: "ON-FULFILLMENT"
   * @const
   */
  ON_FULFILLMENT: "ON-FULFILLMENT",

  /**
   * value: "POST-FULFILLMENT"
   * @const
   */
  POST_FULFILLMENT: "POST-FULFILLMENT"
};
/**
 * @member {module:model/Payment.TypeEnum} type
 */
Payment.prototype.type = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Payment.StatusEnum = {
  /**
   * value: "PAID"
   * @const
   */
  PAID: "PAID",

  /**
   * value: "NOT-PAID"
   * @const
   */
  NOT_PAID: "NOT-PAID"
};
/**
 * @member {module:model/Payment.StatusEnum} status
 */
Payment.prototype.status = undefined;

/**
 * @member {module:model/Time} time
 */
Payment.prototype.time = undefined;

/**
 * Allowed values for the <code>collectedBy</code> property.
 * @enum {String}
 * @readonly
 */
Payment.CollectedByEnum = {
  /**
   * value: "BAP"
   * @const
   */
  BAP: "BAP",

  /**
   * value: "BPP"
   * @const
   */
  BPP: "BPP"
};
/**
 * @member {module:model/Payment.CollectedByEnum} collectedBy
 */
Payment.prototype.collectedBy = undefined;

