/*
 * ONDC Registry 
 * ONDC Participant Management API
 *
 * OpenAPI spec version: 2.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {EntityGst} from './EntityGst';
import {EntityPan} from './EntityPan';
import {KeyPair} from './KeyPair';

/**
 * The Entity model module.
 * @module model/Entity
 * @version 2.0.5
 */
export class Entity {
  /**
   * Constructs a new <code>Entity</code>.
   * @alias module:model/Entity
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Entity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Entity} obj Optional instance to populate.
   * @return {module:model/Entity} The populated <code>Entity</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Entity();
      if (data.hasOwnProperty('gst'))
        obj.gst = EntityGst.constructFromObject(data['gst']);
      if (data.hasOwnProperty('pan'))
        obj.pan = EntityPan.constructFromObject(data['pan']);
      if (data.hasOwnProperty('name_of_authorised_signatory'))
        obj.nameOfAuthorisedSignatory = ApiClient.convertToType(data['name_of_authorised_signatory'], 'String');
      if (data.hasOwnProperty('address_of_authorised Signatory'))
        obj.addressOfAuthorisedSignatory = ApiClient.convertToType(data['address_of_authorised Signatory'], 'String');
      if (data.hasOwnProperty('email_id'))
        obj.emailId = ApiClient.convertToType(data['email_id'], 'String');
      if (data.hasOwnProperty('mobile_no'))
        obj.mobileNo = ApiClient.convertToType(data['mobile_no'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('subscriber_id'))
        obj.subscriberId = ApiClient.convertToType(data['subscriber_id'], 'String');
      if (data.hasOwnProperty('callback_url'))
        obj.callbackUrl = ApiClient.convertToType(data['callback_url'], 'String');
      if (data.hasOwnProperty('key_pair'))
        obj.keyPair = KeyPair.constructFromObject(data['key_pair']);
    }
    return obj;
  }
}

/**
 * @member {module:model/EntityGst} gst
 */
Entity.prototype.gst = undefined;

/**
 * @member {module:model/EntityPan} pan
 */
Entity.prototype.pan = undefined;

/**
 * @member {String} nameOfAuthorisedSignatory
 */
Entity.prototype.nameOfAuthorisedSignatory = undefined;

/**
 * @member {String} addressOfAuthorisedSignatory
 */
Entity.prototype.addressOfAuthorisedSignatory = undefined;

/**
 * @member {String} emailId
 */
Entity.prototype.emailId = undefined;

/**
 * @member {String} mobileNo
 */
Entity.prototype.mobileNo = undefined;

/**
 * Country code as per ISO 3166-1 and ISO 3166-2 format
 * @member {String} country
 */
Entity.prototype.country = undefined;

/**
 * @member {String} subscriberId
 */
Entity.prototype.subscriberId = undefined;

/**
 * it should be relative to subscriber_id mentioned domain. In below example with subscriber _id as abc.com, regsitry will call https://abc.com/ondc/onboarding/on_subscribe
 * @member {String} callbackUrl
 */
Entity.prototype.callbackUrl = undefined;

/**
 * @member {module:model/KeyPair} keyPair
 */
Entity.prototype.keyPair = undefined;

