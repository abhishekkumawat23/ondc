/*
 * ONDC Registry 
 * ONDC Participant Management API
 *
 * OpenAPI spec version: 2.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The LookupBody model module.
 * @module model/LookupBody
 * @version 2.0.5
 */
export class LookupBody {
  /**
   * Constructs a new <code>LookupBody</code>.
   * @alias module:model/LookupBody
   * @class
   * @param subscriberId {String} A unique ID describing a subscriber on a network.
   * @param country {String} Country code as per ISO 3166-1 and ISO 3166-2 format
   * @param city {String} City code
   * @param domain {String} Industry domain of the subscriber.
   * @param type {String} BAP or BPP
   */
  constructor(subscriberId, country, city, domain, type) {
    this.subscriber_id = subscriberId;
    this.country = country;
    this.city = city;
    this.domain = domain;
    this.type = type;
  }

  /**
   * Constructs a <code>LookupBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LookupBody} obj Optional instance to populate.
   * @return {module:model/LookupBody} The populated <code>LookupBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new LookupBody();
      if (data.hasOwnProperty('subscriber_id'))
        obj.subscriberId = ApiClient.convertToType(data['subscriber_id'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('ukId'))
        obj.ukId = ApiClient.convertToType(data['ukId'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('domain'))
        obj.domain = ApiClient.convertToType(data['domain'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * A unique ID describing a subscriber on a network.
 * @member {String} subscriberId
 */
LookupBody.prototype.subscriberId = undefined;

/**
 * Country code as per ISO 3166-1 and ISO 3166-2 format
 * @member {String} country
 */
LookupBody.prototype.country = undefined;

/**
 * A unique ID describing a subscriber on a network.
 * @member {String} ukId
 */
LookupBody.prototype.ukId = undefined;

/**
 * City code
 * @member {String} city
 */
LookupBody.prototype.city = undefined;

/**
 * Industry domain of the subscriber.
 * @member {String} domain
 */
LookupBody.prototype.domain = undefined;

/**
 * BAP or BPP
 * @member {String} type
 */
LookupBody.prototype.type = undefined;

