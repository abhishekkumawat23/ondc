/*
 * ONDC Registry 
 * ONDC Participant Management API
 *
 * OpenAPI spec version: 2.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse200} from '../model/InlineResponse200';
import {InlineResponse2001} from '../model/InlineResponse2001';
import {InlineResponse2002} from '../model/InlineResponse2002';
import {LookupBody} from '../model/LookupBody';
import {SubscribeBody} from '../model/SubscribeBody';
import {SubscriberUrlOnSubscribeBody} from '../model/SubscriberUrlOnSubscribeBody';

/**
* ONDCNetworkParticipantOnboarding service.
* @module api/ONDCNetworkParticipantOnboardingApi
* @version 2.0.5
*/
export class ONDCNetworkParticipantOnboardingApi {

    /**
    * Constructs a new ONDCNetworkParticipantOnboardingApi. 
    * @alias module:api/ONDCNetworkParticipantOnboardingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the lookupPost operation.
     * @callback moduleapi/ONDCNetworkParticipantOnboardingApi~lookupPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse2002>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * subscriber
     * @param {Object} opts Optional parameters
     * @param {module:model/LookupBody} opts.body Onboard
     * @param {module:api/ONDCNetworkParticipantOnboardingApi~lookupPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    lookupPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [InlineResponse2002];

      return this.apiClient.callApi(
        '/lookup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the subscribePost operation.
     * @callback moduleapi/ONDCNetworkParticipantOnboardingApi~subscribePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * subscriber
     * @param {Object} opts Optional parameters
     * @param {module:model/SubscribeBody} opts.body Onboard
     * @param {module:api/ONDCNetworkParticipantOnboardingApi~subscribePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    subscribePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/subscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the subscriberUrlOnSubscribePost operation.
     * @callback moduleapi/ONDCNetworkParticipantOnboardingApi~subscriberUrlOnSubscribePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * to be hosted by subscriber
     * @param {Object} opts Optional parameters
     * @param {module:model/SubscriberUrlOnSubscribeBody} opts.body Onboard
     * @param {module:api/ONDCNetworkParticipantOnboardingApi~subscriberUrlOnSubscribePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    subscriberUrlOnSubscribePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/subscriber_url/on_subscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}