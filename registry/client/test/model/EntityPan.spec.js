/*
 * ONDC Registry 
 * ONDC Participant Management API
 *
 * OpenAPI spec version: 2.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OndcRegistry_);
  }
}(this, function(expect, OndcRegistry_) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('EntityPan', function() {
      beforeEach(function() {
        instance = new OndcRegistry_.EntityPan();
      });

      it('should create an instance of EntityPan', function() {
        // TODO: update the code to test EntityPan
        expect(instance).to.be.a(OndcRegistry_.EntityPan);
      });

      it('should have the property nameAsPerPan (base name: "name_as_per_pan")', function() {
        // TODO: update the code to test the property nameAsPerPan
        expect(instance).to.have.property('nameAsPerPan');
        // expect(instance.nameAsPerPan).to.be(expectedValueLiteral);
      });

      it('should have the property panNo (base name: "pan_no")', function() {
        // TODO: update the code to test the property panNo
        expect(instance).to.have.property('panNo');
        // expect(instance.panNo).to.be(expectedValueLiteral);
      });

      it('should have the property dateOfIncorporation (base name: "date_of_incorporation")', function() {
        // TODO: update the code to test the property dateOfIncorporation
        expect(instance).to.have.property('dateOfIncorporation');
        // expect(instance.dateOfIncorporation).to.be(expectedValueLiteral);
      });

    });
  });

}));
