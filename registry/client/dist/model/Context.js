"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Context = void 0;
var _ApiClient = require("../ApiClient.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Registry 
                                                                                                                                                                                                                                                                                                                                                                                               * ONDC Participant Management API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0.5
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.42
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Context model module.
 * @module model/Context
 * @version 2.0.5
 */
var Context = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Context</code>.
   * @alias module:model/Context
   * @class
   */
  function Context() {
    _classCallCheck(this, Context);
  }

  /**
   * Constructs a <code>Context</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Context} obj Optional instance to populate.
   * @return {module:model/Context} The populated <code>Context</code> instance.
   */
  _createClass(Context, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Context();
        if (data.hasOwnProperty('ops_no')) obj.opsNo = _ApiClient.ApiClient.convertToType(data['ops_no'], 'Number');
      }
      return obj;
    }
  }]);
  return Context;
}();
/**
 * Allowed values for the <code>opsNo</code> property.
 * @enum {Number}
 * @readonly
 */
exports.Context = Context;
Context.OpsNoEnum = {
  /**
   * value: 1
   * @const
   */
  _1: 1,
  /**
   * value: 2
   * @const
   */
  _2: 2,
  /**
   * value: 3
   * @const
   */
  _3: 3,
  /**
   * value: 4
   * @const
   */
  _4: 4,
  /**
   * value: 5
   * @const
   */
  _5: 5,
  /**
   * value: 6
   * @const
   */
  _6: 6,
  /**
   * value: 7
   * @const
   */
  _7: 7,
  /**
   * value: 8
   * @const
   */
  _8: 8,
  /**
   * value: 9
   * @const
   */
  _9: 9,
  /**
   * value: 10
   * @const
   */
  _10: 10,
  /**
   * value: 11
   * @const
   */
  _11: 11,
  /**
   * value: 12
   * @const
   */
  _12: 12
};
/**
 * 1 - Buyer New entity registration <br> 2 - Non-MSN Seller New entity registration <br> 3 - MSN Seller New entity registration <br> 4 - Buyer and Non-MSN Seller new registration  <br> 5 - Buyer and MSN Seller new registration <br> 6 - Buyer/Non-MSN/MSN SellerApp key rotation <br> 7 - MSN Seller changing keys for Seller on Record  <br> 8 - Buyer adding New network participant for Non-MSN Seller <br> 9 - Buyer adding New network participant for MSN Seller <br> 10 - MSN Seller adding new seller on record <br> 11 - BuyerApp/SellerApp amending city <br> 12 - MSN Seller amending Seller on record city  <br>
 * @member {module:model/Context.OpsNoEnum} opsNo
 */
Context.prototype.opsNo = undefined;