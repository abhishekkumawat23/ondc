openapi: 3.0.0
info:
  title: ONDC Protocol API for logistics
  description: ONDC Protocol Core API specification. This is an adaptation of Beckn
    Core version 0.9.3
  version: 1.0.9
externalDocs:
  description: Contract between logistics buyer and seller apps
  url: https://docs.google.com/document/d/1LiKGK3AKwzx5GWAc5g942QKB-TzDn0gGMsvXNJgIrmk/edit
servers:
- url: /
security:
- SubscriberAuth: []
- GatewaySubscriberAuth: []
- GatewaySubscriberAuthNew: []
paths:
  /search:
    post:
      tags:
      - ONDC Seller App
      - ONDC Gateway
      description: Search for services by intent
      operationId: searchPOST
      requestBody:
        description: Buyer searches for products and services
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /select:
    post:
      tags:
      - ONDC Seller App
      description: Select items from the catalog and build your order
      operationId: selectPOST
      requestBody:
        description: Buyer selects one or more catalog items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/select_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /init:
    post:
      tags:
      - ONDC Seller App
      description: Initialize an order by providing billing and/or shipping details
      operationId: initPOST
      requestBody:
        description: Buyer initializes order checkout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/init_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /confirm:
    post:
      tags:
      - ONDC Seller App
      description: Initialize an order by providing billing and/or shipping details
      operationId: confirmPOST
      requestBody:
        description: Buyer confirms an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confirm_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /status:
    post:
      tags:
      - ONDC Seller App
      description: Fetch the latest order object
      operationId: statusPOST
      requestBody:
        description: Buyer checks for status of order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /track:
    post:
      tags:
      - ONDC Seller App
      description: Track an active order
      operationId: trackPOST
      requestBody:
        description: Buyer tracks fulfillment of an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/track_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /cancel:
    post:
      tags:
      - ONDC Seller App
      description: Cancel an order
      operationId: cancelPOST
      requestBody:
        description: Buyer cancels an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancel_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /update:
    post:
      tags:
      - ONDC Seller App
      description: Update an order
      operationId: updatePOST
      requestBody:
        description: Buyer updates an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /rating:
    post:
      tags:
      - ONDC Seller App
      description: Provide feedback on a service
      operationId: ratingPOST
      requestBody:
        description: Buyer rates for one or more rating categories
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rating_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /support:
    post:
      tags:
      - ONDC Seller App
      description: Contact support
      operationId: supportPOST
      requestBody:
        description: Buyer searches for Support Contact details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCSellerApp
  /on_search:
    post:
      tags:
      - ONDC Buyer App
      - ONDC Gateway
      description: Send catalog
      operationId: on_searchPOST
      requestBody:
        description: Sellers provide their catalog in response to buyer search
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_search_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: ONDCBuyerApp
  /on_select:
    post:
      tags:
      - ONDC Buyer App
      description: Send draft order object with quoted price for selected items
      operationId: on_selectPOST
      requestBody:
        description: Seller provides quote for selected items
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_select_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_init:
    post:
      tags:
      - ONDC Buyer App
      description: Send order object with payment details updated
      operationId: on_initPOST
      requestBody:
        description: Seller provides terms and conditions for an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_init_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_confirm:
    post:
      tags:
      - ONDC Buyer App
      description: Send active order object
      operationId: on_confirmPOST
      requestBody:
        description: Seller confirms order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_confirm_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_track:
    post:
      tags:
      - ONDC Buyer App
      description: Send tracking details of an active order
      operationId: on_trackPOST
      requestBody:
        description: Seller provides tracking details for an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_track_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_cancel:
    post:
      tags:
      - ONDC Buyer App
      description: Send cancellation request_id with reasons list in case of cancellation
        request. Else send cancelled order object
      operationId: on_cancelPOST
      requestBody:
        description: Seller provides response to cancellation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_cancel_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_update:
    post:
      tags:
      - ONDC Buyer App
      description: Returns updated service with updated runtime object
      operationId: on_updatePOST
      requestBody:
        description: Seller provides response to order update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_update_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_status:
    post:
      tags:
      - ONDC Buyer App
      description: Fetch the status of a Service
      operationId: on_statusPOST
      requestBody:
        description: Seller provides status information for order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_status_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_rating:
    post:
      tags:
      - ONDC Buyer App
      description: Provide feedback on a service
      operationId: on_ratingPOST
      requestBody:
        description: Seller provides response to rating provided by buyer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_rating_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /on_support:
    post:
      tags:
      - ONDC Buyer App
      description: Contact Support
      operationId: on_supportPOST
      requestBody:
        description: Seller provides Contact Support details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/on_support_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: ONDCBuyerApp
  /get_cancellation_reasons:
    post:
      tags:
      - Seller App Meta APIs
      description: Get cancellation reasons from the Seller App
      operationId: get_cancellation_reasonsPOST
      requestBody:
        description: Context header is sent as the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_cancellation_reasons_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: SellerAppMetaAPIs
  /cancellation_reasons:
    post:
      tags:
      - Buyer App Meta APIs
      description: Get cancellation reasons from the Seller App
      operationId: cancellation_reasonsPOST
      requestBody:
        description: List of cancellation reasons.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancellation_reasons_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: BuyerAppMetaAPIs
  /get_return_reasons:
    post:
      tags:
      - Seller App Meta APIs
      description: Get return reasons from the Seller App
      operationId: get_return_reasonsPOST
      requestBody:
        description: Context header is sent as the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_return_reasons_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: SellerAppMetaAPIs
  /return_reasons:
    post:
      tags:
      - Buyer App Meta APIs
      description: Get return reasons from the Seller App
      operationId: return_reasonsPOST
      requestBody:
        description: List of return reasons
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/return_reasons_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: BuyerAppMetaAPIs
  /get_rating_categories:
    post:
      tags:
      - Seller App Meta APIs
      description: Get a list of categories that can be rated by the Seller App
      operationId: get_rating_categoriesPOST
      requestBody:
        description: Context header is sent as the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_rating_categories_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: SellerAppMetaAPIs
  /rating_categories:
    post:
      tags:
      - Buyer App Meta APIs
      description: Get a list of categories that can be rated by the Buyer App
      operationId: rating_categoriesPOST
      requestBody:
        description: Array of categories which can be rated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rating_categories_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: BuyerAppMetaAPIs
  /get_feedback_categories:
    post:
      tags:
      - Seller Meta APIs
      description: Get a list of categories for which feedback can be given by the
        Buyer App
      operationId: get_feedback_categoriesPOST
      requestBody:
        description: Context header is sent as the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_feedback_categories_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: SellerMetaAPIs
  /feedback_categories:
    post:
      tags:
      - Buyer App Meta APIs
      description: Get a list of categories for which feedback can be given by the
        Buyer App
      operationId: feedback_categoriesPOST
      requestBody:
        description: Array of categories for which feedback can be given by the Buyer
          App
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedback_categories_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: BuyerAppMetaAPIs
  /get_feedback_form:
    post:
      tags:
      - Seller App Meta APIs
      description: Request a feedback form from the Seller App
      operationId: get_feedback_formPOST
      requestBody:
        description: The rating value and category is sent by the Buyer App
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_feedback_form_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: SellerAppMetaAPIs
  /feedback_form:
    post:
      tags:
      - Buyer App Meta APIs
      description: Get a feedback form from the Seller App
      operationId: feedback_formPOST
      requestBody:
        description: Feedback form sent by the Buyer App
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedback_form_body'
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      x-swagger-router-controller: BuyerAppMetaAPIs
components:
  schemas:
    Ack:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: "Describe the status of the ACK response. If schema validation\
            \ passes, status is ACK else it is NACK"
          enum:
          - ACK
          - NACK
      description: Describes the ACK response
      example:
        status: ACK
    AddOn:
      type: object
      properties:
        id:
          type: string
          description: "ID of the add-on. This follows the syntax {item.id}/add-on/{add-on\
            \ unique id} for item specific add-on OR "
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
      description: Describes an add-on
    Address:
      type: object
      properties:
        door:
          type: string
          description: Door / Shop number of the address
        name:
          type: string
          description: "Name of address if applicable. Example, shop name"
        building:
          type: string
          description: Name of the building or block
        street:
          type: string
          description: Street name or number
        locality:
          type: string
          description: "Name of the locality, apartments"
        ward:
          type: string
          description: Name or number of the ward if applicable
        city:
          type: string
          description: City name
        state:
          type: string
          description: State name
        country:
          type: string
          description: Country name
        area_code:
          type: string
          description: "Area code. This can be Pincode, ZIP code or any equivalent"
      description: Describes an address
    Agent:
      description: Describes an order executor
      allOf:
      - $ref: '#/components/schemas/Person'
      - $ref: '#/components/schemas/Contact'
      - type: object
        properties:
          rateable:
            $ref: '#/components/schemas/Rateable'
    Authorization:
      type: object
      properties:
        type:
          type: string
          description: Type of authorization mechanism used
        token:
          type: string
          description: Token used for authorization
        valid_from:
          type: string
          description: Timestamp in RFC3339 format from which token is valid
          format: date-time
        valid_to:
          type: string
          description: Timestamp in RFC3339 format until which token is valid
          format: date-time
        status:
          type: string
          description: Status of the token
      description: Describes an authorization mechanism
    Billing:
      required:
      - name
      - phone
      - tax_number
      type: object
      properties:
        name:
          type: string
          description: Personal details of the customer needed for billing.
        organization:
          $ref: '#/components/schemas/Organization'
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
        phone:
          type: string
        time:
          $ref: '#/components/schemas/Time'
        tax_number:
          type: string
          description: GST number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Describes a billing event
    Cancellation:
      type: object
      properties:
        type:
          type: string
          enum:
          - full
          - partial
        ref_id:
          type: string
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        time:
          type: string
          format: date-time
        cancelled_by:
          type: string
        reasons:
          $ref: '#/components/schemas/Option'
        selected_reason:
          $ref: '#/components/schemas/Cancellation_selected_reason'
        additional_description:
          $ref: '#/components/schemas/Descriptor'
      description: "Describes a cancellation event. Use the following reason codes\
        \ (reasons.id, reasons.descriptor.code) (\"001\", \"Order delivery delayed\
        \ or not possible\") (\"002\", \"Price of one or more items have changed due\
        \ to which buyer was asked to make additional payment\") (\"003\", \"One or\
        \ more items in the Order not available\") (\"004\", \"Delivery pin code not\
        \ serviceable\") (\"005\", \"Buyer refused to accept delivery\") (\"006\"\
        , \"Buyer not found\") (\"007\", \"Address not found\") (\"008\", \"Buyer\
        \ does not want product any more\") (\"009\", \"Product available at lower\
        \ price the order price\")"
    Catalog:
      required:
      - bpp/providers
      type: object
      properties:
        bpp/descriptor:
          $ref: '#/components/schemas/Descriptor'
        bpp/categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        bpp/fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        bpp/payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        bpp/offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        bpp/providers:
          required:
          - descriptor.name
          - items.descriptor.name
          - locations.gps
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
      description: Describes a Seller App catalog
    Category:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the category
          enum:
          - Express Delivery
          - Standard Delivery
          - Immediate Delivery
          - Same Day Delivery
          - Next Day Delivery
        parent_category_id:
          type: string
          description: Unique id of the parent category - Express delivery - Standard
            Delivery
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        time:
          $ref: '#/components/schemas/Time'
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes a category.
    Circle:
      required:
      - gps
      - radius
      type: object
      properties:
        gps:
          $ref: '#/components/schemas/Gps'
        radius:
          $ref: '#/components/schemas/Scalar'
      description: Describes a circular area on the map
    City:
      type: object
      properties:
        name:
          type: string
          description: Name of the city
        code:
          type: string
          description: "Codification of city code will be using the std code of the\
            \ city e.g. for Bengaluru, city code is 'std:080'"
          enum:
          - std:080 (Bengaluru)
          - std:011 (New Delhi)
          - std:0422 (Coimbatore)
          - std:0364 (Shillong)
          - std:0522 (Lucknow)
          - std:0755 (Bhopal)
          - std:044 (Chennai)
          - std:022 (Mumbai)
          - std:020 (Pune)
          - std:040 (Hyderabad)
          - std:0145 (Ajmer)
      description: Describes a city
    Contact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
    Context:
      required:
      - action
      - bap_id
      - bap_uri
      - city
      - core_version
      - country
      - domain
      - message_id
      - timestamp
      - transaction_id
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        country:
          $ref: '#/components/schemas/Country/properties/code'
        city:
          $ref: '#/components/schemas/City/properties/code'
        action:
          type: string
          description: Defines the ONDC API call. Any actions other than the enumerated
            actions are not supported by ONDC Protocol
          enum:
          - search
          - select
          - init
          - confirm
          - update
          - status
          - track
          - cancel
          - rating
          - support
          - on_search
          - on_select
          - on_init
          - on_confirm
          - on_update
          - on_status
          - on_track
          - on_cancel
          - on_rating
          - on_support
        core_version:
          type: string
          description: Version of ONDC core API specification being used
        bap_id:
          type: string
          description: Unique id of the Buyer App. By default it is the fully qualified
            domain name of the Buyer App
        bap_uri:
          type: string
          description: URI of the Buyer App for accepting callbacks. Must have the
            same domain name as the bap_id
          format: uri
        bpp_id:
          type: string
          description: "Unique id of the Seller App. By default it is the fully qualified\
            \ domain name of the Seller App, mandatory for all peer-to-peer API requests,\
            \ i.e. except search and on_search"
        bpp_uri:
          type: string
          description: "URI of the Seller App. Must have the same domain name as the\
            \ bap_id, mandatory for all peer-to-peer API requests, i.e. except search\
            \ and on_search"
          format: uri
        transaction_id:
          type: string
          description: This is a unique value which persists across all API calls
            from search through confirm
        message_id:
          type: string
          description: This is a unique value which persists during a request / callback
            cycle
        timestamp:
          type: string
          description: Time of request generation in RFC3339 format
          format: date-time
        key:
          type: string
          description: The encryption public key of the sender
        ttl:
          type: string
          description: "Timestamp for which this message holds valid in ISO8601 durations\
            \ format - Outer limit for ttl for search, select, init, confirm, status,\
            \ track, cancel, update, rating, support is 'PT30S' which is 30 seconds,\
            \ different buyer apps can change this to meet their UX requirements,\
            \ but it shouldn't exceed this outer limit"
      description: Describes a ONDC message context
    Country:
      type: object
      properties:
        name:
          type: string
          description: Name of the country
        code:
          type: string
          description: Country code as per ISO 3166 Alpha-3 code format
      description: Describes a country.
    DecimalValue:
      pattern: "[+-]?([0-9]*[.])?[0-9]+"
      type: string
      description: Describes a decimal value
    Descriptor:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        symbol:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        audio:
          type: string
          format: uri
        "3d_render":
          type: string
          format: uri
      description: Describes the description of a real-world object.
    Dimensions:
      type: object
      properties:
        length:
          $ref: '#/components/schemas/Scalar'
        breadth:
          $ref: '#/components/schemas/Scalar'
        height:
          $ref: '#/components/schemas/Scalar'
      description: Describes the dimensions of a real-world object
    Document:
      type: object
      properties:
        url:
          type: string
          format: uri
        label:
          type: string
      description: Describes a document which can be sent as a url
    Domain:
      type: string
      description: Codification of domain for ONDC
      enum:
      - nic2004:60232
    Duration:
      type: string
      description: Describes duration as per ISO8601 format
    Error:
      required:
      - code
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - CONTEXT-ERROR
          - CORE-ERROR
          - DOMAIN-ERROR
          - POLICY-ERROR
          - JSON-SCHEMA-ERROR
        code:
          type: string
          description: "ONDC specific error code. For full list of error codes, refer\
            \ to docs/drafts/Error Codes.md of this repo"
        path:
          type: string
          description: Path to json schema generating the error. Used only during
            json schema validation errors
        message:
          type: string
          description: Human readable message describing the error
      description: Describes an error object
      example:
        path: path
        code: code
        type: CONTEXT-ERROR
        message: message
    Feedback:
      type: object
      properties:
        feedback_form:
          $ref: '#/components/schemas/FeedbackForm'
        feedback_url:
          $ref: '#/components/schemas/FeedbackUrl'
      description: Feedback for a service
    FeedbackForm:
      type: array
      description: Describes a feedback form that a Seller App can send to get feedback
        from the Buyer App
      items:
        $ref: '#/components/schemas/FeedbackFormElement'
    FeedbackFormElement:
      type: object
      properties:
        id:
          type: string
        parent_id:
          $ref: '#/components/schemas/FeedbackFormElement/properties/id'
        question:
          type: string
          description: Specifies the question to which the answer options will be
            contained in the child FeedbackFormElements
        answer:
          type: string
          description: Specifies an answer option to which the question will be in
            the FeedbackFormElement specified in parent_id
        answer_type:
          type: string
          description: Specifies how the answer option should be rendered.
          enum:
          - radio
          - checkbox
          - text
      description: An element in the feedback form. It can be question or an answer
        to the question.
    FeedbackUrl:
      type: object
      properties:
        url:
          type: string
          description: feedback URL sent by the Seller App
          format: uri
        tl_method:
          type: string
          enum:
          - http/get
          - http/post
        params:
          $ref: '#/components/schemas/FeedbackUrl_params'
      description: Describes how a feedback URL will be sent by the Seller App
    Fulfillment:
      type: object
      properties:
        id:
          type: string
          description: Unique reference ID to the fulfillment of an order
        type:
          type: string
          description: This describes the type of fulfillment
          enum:
          - CoD
          - Prepaid
          - RTO
          - Reverse QC
        '@ondc/org/awb_no':
          type: string
        '@ondc/org/ewaybillno':
          type: string
        '@ondc/org/ebnexpirydate':
          type: string
          format: date-time
        provider_id:
          $ref: '#/components/schemas/Provider/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        state:
          $ref: '#/components/schemas/State'
        tracking:
          type: boolean
          description: Indicates whether the fulfillment allows tracking
          default: false
        customer:
          $ref: '#/components/schemas/Fulfillment_customer'
        agent:
          $ref: '#/components/schemas/Agent'
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        start:
          $ref: '#/components/schemas/Fulfillment_start'
        end:
          $ref: '#/components/schemas/Fulfillment_end'
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes how a single product/service will be rendered/fulfilled
        to the end customer - Use tags to communicate if order is ready to ship -
        Order ready to ship - "@ondc/org/order_ready_to_ship" (pass "Yes")
    Gps:
      pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\\
        d)|([1-9]?\\d))(\\.\\d+)?)$"
      type: string
      description: Describes a gps coordinate
    Image:
      type: string
      description: "Image of an object. <br/><br/> A url based image will look like\
        \ <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be\
        \ sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
    Intent:
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        provider:
          $ref: '#/components/schemas/Provider'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        payment:
          $ref: '#/components/schemas/Payment'
        category:
          $ref: '#/components/schemas/Category'
        offer:
          $ref: '#/components/schemas/Offer'
        item:
          $ref: '#/components/schemas/Item'
        '@ondc/org/payload_details':
          $ref: '#/components/schemas/Intent_ondcorgpayload_details'
        tags:
          $ref: '#/components/schemas/Tags'
      description: Intent of a user. Used for searching for services
    ItemQuantity:
      type: object
      properties:
        allocated:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        available:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        maximum:
          $ref: '#/components/schemas/ItemQuantity_maximum'
        minimum:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        selected:
          $ref: '#/components/schemas/ItemQuantity_allocated'
      description: Describes count or amount of an item
    Item:
      required:
      - category_id
      - id
      type: object
      properties:
        id:
          type: string
          description: This is the most unique identifier of a service item. An example
            of an Item ID could be the SKU of a product.
        parent_item_id:
          $ref: '#/components/schemas/Item/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
        category_id:
          $ref: '#/components/schemas/Category/properties/id'
        fulfillment_id:
          $ref: '#/components/schemas/Fulfillment/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        location_id:
          $ref: '#/components/schemas/Location/properties/id'
        time:
          $ref: '#/components/schemas/Time'
        rateable:
          $ref: '#/components/schemas/Rateable'
        matched:
          type: boolean
        related:
          type: boolean
        recommended:
          type: boolean
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes a product or a service offered to the end consumer by
        the provider.
    Language:
      type: object
      properties:
        code:
          type: string
      description: indicates language code. ONDC supports language codes as per ISO
        639.2 standard
    Location:
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        gps:
          $ref: '#/components/schemas/Gps'
        address:
          $ref: '#/components/schemas/Address'
        station_code:
          type: string
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
        circle:
          $ref: '#/components/schemas/Circle'
        polygon:
          type: string
        "3dspace":
          type: string
        time:
          $ref: '#/components/schemas/Time'
      description: Describes the location of a runtime object.
    Name:
      pattern: "^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$"
      type: string
      description: "Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}"
    Offer:
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        location_ids:
          type: array
          items:
            $ref: '#/components/schemas/Location/properties/id'
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/Category/properties/id'
        item_ids:
          type: array
          items:
            $ref: '#/components/schemas/Item/properties/id'
        time:
          $ref: '#/components/schemas/Time'
      description: Describes an offer
    Operator:
      description: Describes the agent of a service
      allOf:
      - $ref: '#/components/schemas/Person'
      - properties:
          experience:
            $ref: '#/components/schemas/Operator_experience'
    Option:
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
      description: Describes a selectable option
    Order:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for Order across network, will be created\
            \ by buyer app in confirm API"
        state:
          type: string
          enum:
          - Active
          - Updated
          - Completed
          - Cancelled
          - Shipped
          - RTO_Init
          - RTO_Delivered
        provider:
          $ref: '#/components/schemas/Order_provider'
        items:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Order_items'
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/Order_add_ons'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Order_offers'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        billing:
          $ref: '#/components/schemas/Billing'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        quote:
          $ref: '#/components/schemas/Quotation'
        payment:
          $ref: '#/components/schemas/Payment'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        '@ondc/org/created_by':
          type: string
          description: order created by
          enum:
          - buyer-app
          - seller-app
        '@ondc/org/cancellation':
          $ref: '#/components/schemas/Cancellation'
        '@ondc/org/linked_order':
          $ref: '#/components/schemas/Order_ondcorglinked_order'
      description: "Describes the details of an order - For \"@ondc/org/cancellation.cancelled_by\"\
        \ use following values - buyer-app, seller-app, logistics-provider"
    Organization:
      type: object
      properties:
        name:
          type: string
        cred:
          type: string
      description: Describes an organization
    Page:
      type: object
      properties:
        id:
          type: string
        next_id:
          type: string
      description: Describes a page in a search result
    Payment:
      type: object
      properties:
        uri:
          type: string
          description: "A payment uri to be called by the Buyer App. If empty, then\
            \ the payment is to be done offline. The details of payment should be\
            \ present in the params object. If ```tl_method``` = http/get, then the\
            \ payment details will be sent as url params. Two url param values, ```$transaction_id```\
            \ and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234"
          format: uri
        tl_method:
          type: string
          enum:
          - http/get
          - http/post
          - payto
          - upi
        params:
          $ref: '#/components/schemas/Payment_params'
        type:
          type: string
          enum:
          - ON-ORDER
          - PRE-FULFILLMENT
          - ON-FULFILLMENT
          - POST-FULFILLMENT
        status:
          type: string
          enum:
          - PAID
          - NOT-PAID
          - PENDING
        time:
          $ref: '#/components/schemas/Time'
        collected_by:
          type: string
          enum:
          - BAP
          - BPP
        '@ondc/org/collection_amount':
          type: string
          description: CoD collection amount
        '@ondc/org/cod-settlement_window':
          type: string
          description: settlement window in ISO8601 durations format e.g. 'PT48H'
            indicates T+2 settlement
        '@ondc/org/cod-settlement_window_status':
          type: string
          enum:
          - Assert
          - Agree
          - Disagree
          - Terminate
        '@ondc/org/cod-settlement_details':
          type: array
          items:
            $ref: '#/components/schemas/Payment_ondcorgcodsettlement_details'
      description: Describes a payment
    Person:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        image:
          $ref: '#/components/schemas/Image'
        dob:
          type: string
          format: date
        gender:
          type: string
          description: "Gender of something, typically a Person, but possibly also\
            \ fictional characters, animals, etc. While Male and Female may be used,\
            \ text strings are also acceptable for people who do not identify as a\
            \ binary gender"
        cred:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      description: Describes a person.
    Policy:
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        parent_policy_id:
          $ref: '#/components/schemas/Policy/properties/id'
        time:
          $ref: '#/components/schemas/Time'
      description: Describes a policy. Allows for domain extension.
    Price:
      required:
      - currency
      - value
      type: object
      properties:
        currency:
          type: string
          description: ISO 4217 alphabetic currency code e.g. 'INR'
        value:
          $ref: '#/components/schemas/DecimalValue'
        estimated_value:
          $ref: '#/components/schemas/DecimalValue'
        computed_value:
          $ref: '#/components/schemas/DecimalValue'
        listed_value:
          $ref: '#/components/schemas/DecimalValue'
        offered_value:
          $ref: '#/components/schemas/DecimalValue'
        minimum_value:
          $ref: '#/components/schemas/DecimalValue'
        maximum_value:
          $ref: '#/components/schemas/DecimalValue'
      description: Describes the price of an item. Allows for domain extension.
    Provider:
      type: object
      properties:
        id:
          type: string
          description: Id of the provider
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        category_id:
          type: string
          description: Category Id of the provider
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        time:
          $ref: '#/components/schemas/Time'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        locations:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Location'
            - type: object
              properties:
                rateable:
                  $ref: '#/components/schemas/Rateable'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'
      description: "Describes a service provider. This can be a restaurant, a hospital,\
        \ a Store etc"
    Quotation:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        breakup:
          type: array
          items:
            $ref: '#/components/schemas/Quotation_breakup'
        ttl:
          $ref: '#/components/schemas/Duration'
      description: Describes a quote
    Rateable:
      type: boolean
      description: If the entity can be rated or not
    Rating:
      type: object
      properties:
        rating_category:
          type: string
          description: Category of the object being rated
        id:
          type: string
          description: Id of the object being rated
        value:
          maximum: 5
          minimum: 1
          type: number
          description: Rating value given to the object (1 - Poor; 2 - Needs improvement;
            3 - Satisfactory; 4 - Good; 5 - Excellent)
        feedback_form:
          $ref: '#/components/schemas/FeedbackForm'
        feedback_id:
          $ref: '#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id'
      description: Describes the rating of a person or an object.
    RatingAck:
      type: object
      properties:
        feedback_ack:
          type: boolean
          description: If feedback has been recorded or not
        rating_ack:
          type: boolean
          description: If rating has been recorded or not
    Scalar:
      required:
      - unit
      - value
      type: object
      properties:
        type:
          type: string
          enum:
          - CONSTANT
          - VARIABLE
        value:
          type: number
        estimated_value:
          type: number
        computed_value:
          type: number
        range:
          $ref: '#/components/schemas/Scalar_range'
        unit:
          type: string
      description: An object representing a scalar quantity.
    Schedule:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/Duration'
        holidays:
          type: array
          items:
            type: string
            format: date-time
        times:
          type: array
          items:
            type: string
            format: date-time
      description: Describes a schedule
    State:
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          description: ID of entity which changed the state
      description: Describes a state
    Subscriber:
      type: object
      properties:
        subscriber_id:
          type: string
          description: Registered domain name of the subscriber. Must have a valid
            SSL certificate issued by a Certificate Authority of the operating region
        type:
          type: string
          enum:
          - bap
          - bpp
          - bg
        cb_url:
          type: string
          description: Callback URL of the subscriber. The Registry will call this
            URL's on_subscribe API to validate the subscriber\'s credentials
        domain:
          $ref: '#/components/schemas/Domain'
        city:
          $ref: '#/components/schemas/City/properties/code'
        country:
          $ref: '#/components/schemas/Country/properties/code'
        signing_public_key:
          type: string
          description: "Signing Public key of the subscriber. <br/><br/>Any subscriber\
            \ platform (Buyer App, Seller App, Gateway) who wants to transact on the\
            \ network must digitally sign the ```requestBody``` using the corresponding\
            \ private key of this public key and send it in the transport layer header.\
            \ In case of ```HTTP``` it is the ```Authorization``` header. <br><br/>The\
            \ ```Authorization``` will be used to validate the signature of a Buyer\
            \ App or Seller App.<br/><br/>Furthermore, if an API call is being proxied\
            \ or multicast by a ONDC Gateway, the Gateway must use it\\'s signing\
            \ key to digitally sign the ```requestBody``` using the corresponding\
            \ private key of this public key and send it in the ```X-Gateway-Authorization```\
            \ header."
        encryption_public_key:
          type: string
          description: Encryption public key of the Buyer App. Any Seller App must
            encrypt the ```requestBody.message``` value of the ```on_search``` API
            using this public key.
        status:
          type: string
          enum:
          - INITIATED
          - UNDER_SUBSCRIPTION
          - SUBSCRIBED
          - INVALID_SSL
          - UNSUBSCRIBED
        created:
          type: string
          description: Timestamp when a subscriber was added to the registry with
            status = INITIATED
          format: date-time
        updated:
          type: string
          format: date-time
        expires:
          type: string
          description: Expiry timestamp in UTC derived from the ```lease_time``` of
            the subscriber
          format: date-time
      description: "Any entity which wants to authenticate itself on a network. This\
        \ can be a Buyer App, Seller App or Gateway."
    Support:
      type: object
      properties:
        type:
          type: string
          enum:
          - order
          - billing
          - fulfillment
        ref_id:
          type: string
        channels:
          $ref: '#/components/schemas/Tags'
      description: Customer support
    Tags:
      type: object
      additionalProperties:
        type: string
      description: Describes a tag. This is a simple key-value store which is used
        to contain extended metadata
    Time:
      type: object
      properties:
        label:
          type: string
        timestamp:
          type: string
          format: date-time
        duration:
          $ref: '#/components/schemas/Duration'
        range:
          $ref: '#/components/schemas/Time_range'
        days:
          type: string
          description: comma separated values representing days of the week
        schedule:
          $ref: '#/components/schemas/Schedule'
      description: Describes time in its various forms. It can be a single point in
        time; duration; or a structured timetable of operations
    TrackingData:
      $ref: '#/components/schemas/Location/properties/gps'
    Tracking:
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
          enum:
          - active
          - inactive
      description: Describes the tracking info of an object
    Vehicle:
      type: object
      properties:
        category:
          type: string
        capacity:
          type: integer
        make:
          type: string
        model:
          type: string
        size:
          type: string
        variant:
          type: string
        color:
          type: string
        energy_type:
          type: string
        registration:
          type: string
      description: Describes the properties of a vehicle used in a mobility service
    search_message:
      type: object
      properties:
        intent:
          $ref: '#/components/schemas/Intent'
    search_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/search_message'
    inline_response_200:
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/inline_response_200_message'
        error:
          $ref: '#/components/schemas/Error'
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
    select_message:
      required:
      - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    select_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
    init_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
    confirm_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
    status_message:
      required:
      - order_id
      type: object
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
    status_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/status_message'
    track_message:
      required:
      - order_id
      type: object
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
        callback_url:
          type: string
          format: uri
    track_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/track_message'
    cancel_message:
      required:
      - order_id
      type: object
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
        cancellation_reason_id:
          $ref: '#/components/schemas/Option/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
    cancel_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/cancel_message'
    update_message:
      required:
      - order
      - update_target
      type: object
      properties:
        update_target:
          type: string
          description: "Comma separated values of order objects being updated. For\
            \ example: ```\"update_target\":\"item,billing,fulfillment\"```"
        order:
          $ref: '#/components/schemas/Order'
    update_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/update_message'
    rating_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/Rating'
    support_message:
      type: object
      properties:
        ref_id:
          type: string
          description: ID of the element for which support is needed
    support_body:
      required:
      - context
      - message
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/support_message'
    on_search_message:
      required:
      - catalog
      type: object
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
    on_search_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_search_message'
        error:
          $ref: '#/components/schemas/Error'
    inline_response_200_1:
      required:
      - context
      type: object
      properties:
        message:
          $ref: '#/components/schemas/inline_response_200_message'
        error:
          $ref: '#/components/schemas/Error'
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
    on_select_message_order:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/Provider'
        provider_location:
          $ref: '#/components/schemas/Location'
        items:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Item'
            - properties:
                quantity:
                  $ref: '#/components/schemas/ItemQuantity'
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/AddOn'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        quote:
          $ref: '#/components/schemas/Quotation'
    on_select_message:
      required:
      - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/on_select_message_order'
    on_select_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_select_message'
        error:
          $ref: '#/components/schemas/Error'
    on_init_message_order_provider:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Provider/properties/id'
    on_init_message_order_provider_location:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Location/properties/id'
    on_init_message_order_items:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Item/properties/id'
        quantity:
          $ref: '#/components/schemas/ItemQuantity/properties/selected'
    on_init_message_order_add_ons:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AddOn/properties/id'
    on_init_message_order_offers:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Offer/properties/id'
    on_init_message_order:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/on_init_message_order_provider'
        provider_location:
          $ref: '#/components/schemas/on_init_message_order_provider_location'
        items:
          type: array
          items:
            $ref: '#/components/schemas/on_init_message_order_items'
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/on_init_message_order_add_ons'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/on_init_message_order_offers'
        billing:
          $ref: '#/components/schemas/Billing'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        quote:
          $ref: '#/components/schemas/Quotation'
        payment:
          $ref: '#/components/schemas/Payment'
    on_init_message:
      required:
      - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/on_init_message_order'
    on_init_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_init_message'
        error:
          $ref: '#/components/schemas/Error'
    on_confirm_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
        error:
          $ref: '#/components/schemas/Error'
    on_track_message:
      required:
      - tracking
      type: object
      properties:
        tracking:
          $ref: '#/components/schemas/Tracking'
    on_track_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_track_message'
        error:
          $ref: '#/components/schemas/Error'
    on_cancel_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
        error:
          $ref: '#/components/schemas/Error'
    on_update_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
        error:
          $ref: '#/components/schemas/Error'
    on_status_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/select_message'
        error:
          $ref: '#/components/schemas/Error'
    on_rating_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/RatingAck'
        error:
          $ref: '#/components/schemas/Error'
    on_support_message:
      type: object
      properties:
        phone:
          type: string
          format: phone
        email:
          type: string
          format: email
        uri:
          type: string
          format: uri
    on_support_body:
      required:
      - context
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/on_support_message'
        error:
          $ref: '#/components/schemas/Error'
    get_cancellation_reasons_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
    cancellation_reasons_message:
      type: object
      properties:
        cancellation_reasons:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    cancellation_reasons_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/cancellation_reasons_message'
    get_return_reasons_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
    return_reasons_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        return_reasons:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    get_rating_categories_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
    rating_categories_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        rating_categories:
          type: array
          items:
            $ref: '#/components/schemas/Rating/properties/rating_category'
    get_feedback_categories_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
    feedback_categories_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        feedback_categories:
          type: array
          items:
            $ref: '#/components/schemas/Rating/properties/rating_category'
    get_feedback_form_message:
      type: object
      properties:
        rating_value:
          $ref: '#/components/schemas/Rating/properties/value'
        rating_category:
          $ref: '#/components/schemas/Rating/properties/rating_category'
    get_feedback_form_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/get_feedback_form_message'
    feedback_form_body:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/Feedback'
    Cancellation_selected_reason:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Option/properties/id'
    FeedbackUrl_params:
      required:
      - feedback_id
      type: object
      properties:
        feedback_id:
          type: string
          description: This value will be placed in the the $feedback_id url param
            in case of http/get and in the requestBody http/post requests
      additionalProperties:
        type: string
    Fulfillment_customer:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
    Fulfillment_start:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      description: Details on the start of fulfillment
    Fulfillment_end:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      description: Details on the end of fulfillment
    Intent_ondcorgpayload_details:
      type: object
      properties:
        weight:
          $ref: '#/components/schemas/Scalar'
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        category:
          type: string
        value:
          $ref: '#/components/schemas/Price'
        dangerous_goods:
          type: boolean
      description: "payload details that will allow logistics provider to determine\
        \ serviceability. For weight, enums for unit are - \"Kilogram\", \"Gram\"\
        \ For dimensions, enums for length.unit, breadth.unit and height.unit are\
        \ - \"meter\", \"centimeter\""
    ItemQuantity_allocated:
      type: object
      properties:
        count:
          minimum: 0
          type: integer
        measure:
          $ref: '#/components/schemas/Scalar'
    ItemQuantity_maximum:
      type: object
      properties:
        count:
          minimum: 1
          type: integer
        measure:
          $ref: '#/components/schemas/Scalar'
    Operator_experience:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
        unit:
          type: string
    Order_provider_locations:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Location/properties/id'
    Order_provider:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Provider/properties/id'
        locations:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Order_provider_locations'
    Order_items:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Item/properties/id'
        category_id:
          $ref: '#/components/schemas/Category/properties/id'
        quantity:
          $ref: '#/components/schemas/ItemQuantity/properties/selected'
    Order_add_ons:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AddOn/properties/id'
    Order_offers:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Offer/properties/id'
    Order_ondcorglinked_order_items:
      type: object
      properties:
        category_id:
          $ref: '#/components/schemas/Category/properties/id'
        name:
          $ref: '#/components/schemas/Descriptor/properties/name'
        quantity:
          $ref: '#/components/schemas/ItemQuantity/properties/selected'
        price:
          $ref: '#/components/schemas/Price'
    Order_ondcorglinked_order_provider:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Provider/properties/id'
        name:
          $ref: '#/components/schemas/Descriptor/properties/name'
        address:
          $ref: '#/components/schemas/Address'
    Order_ondcorglinked_order_order:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Order/properties/id'
        weight:
          $ref: '#/components/schemas/Scalar'
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        declared_value:
          $ref: '#/components/schemas/Price'
        taxable_value:
          $ref: '#/components/schemas/Price'
        hsn_code:
          type: string
        sgst_amount:
          $ref: '#/components/schemas/DecimalValue'
        cgst_amount:
          $ref: '#/components/schemas/DecimalValue'
        igst_amount:
          $ref: '#/components/schemas/DecimalValue'
      description: use same units for weight and dimensions as defined for Intent
    Order_ondcorglinked_order:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order_ondcorglinked_order_items'
        provider:
          $ref: '#/components/schemas/Order_ondcorglinked_order_provider'
        order:
          $ref: '#/components/schemas/Order_ondcorglinked_order_order'
      description: payload for linked order e.g. retail order that cascaded into this
        logistics order
    Payment_params:
      required:
      - currency
      type: object
      properties:
        transaction_id:
          type: string
          description: This value will be placed in the the $transaction_id url param
            in case of http/get and in the requestBody http/post requests
        transaction_status:
          type: string
        amount:
          $ref: '#/components/schemas/Price/properties/value'
        currency:
          $ref: '#/components/schemas/Price/properties/currency'
      additionalProperties:
        type: string
    Payment_ondcorgcodsettlement_details:
      type: object
      properties:
        settlement_counterparty:
          type: string
          enum:
          - buyer-app
          - seller-app
        settlement_type:
          type: string
          enum:
          - neft
          - rtgs
          - upi
        settlement_bank_account_no:
          type: string
        settlement_ifsc_code:
          type: string
        upi_address:
          type: string
          description: UPI payment address e.g. VPA
        settlement_status:
          type: string
          enum:
          - PAID
          - NOT-PAID
        settlement_reference:
          type: string
          description: Settlement transaction reference number
        settlement_timestamp:
          type: string
          description: Settlement transaction timestamp
          format: date-time
    Quotation_breakup:
      type: object
      properties:
        '@ondc/org/item_id':
          $ref: '#/components/schemas/Item/properties/id'
        '@ondc/org/title_type':
          type: string
          enum:
          - Delivery Charge
          - RTO Charge
          - Reverse QC Charge
          - Tax
        title:
          type: string
        price:
          $ref: '#/components/schemas/Price'
    Scalar_range:
      type: object
      properties:
        min:
          type: number
        max:
          type: number
    Time_range:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    inline_response_200_message:
      required:
      - ack
      type: object
      properties:
        ack:
          $ref: '#/components/schemas/Ack'
      example:
        ack:
          status: ACK
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      description: "Signature of message body using Buyer App or Seller App subscriber's\
        \ signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature\
        \ keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\"\
        ,created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires)\
        \ digest\",signature=\"Base64(signing string)\"</code>"
      name: Authorization
      in: header
    GatewaySubscriberAuth:
      type: apiKey
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>Proxy-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code><p><b>Note:</b>This\
        \ header will be deprecated soon and will no longer be supported in future\
        \ releases. New implementors are requested to use the X-Gateway-Authorization\
        \ header. Existing implementations are requested to migrate their header to\
        \ the new header. The deprecation date will be set after discussion as per\
        \ the standard specification governance process.</p>"
      name: Proxy-Authorization
      in: header
    GatewaySubscriberAuthNew:
      type: apiKey
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>X-Gateway-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code>"
      name: X-Gateway-Authorization
      in: header
