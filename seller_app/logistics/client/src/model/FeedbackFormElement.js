/*
 * ONDC Protocol API for logistics
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.9
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {FeedbackFormElementpropertiesid} from './FeedbackFormElementpropertiesid';

/**
 * The FeedbackFormElement model module.
 * @module model/FeedbackFormElement
 * @version 1.0.9
 */
export class FeedbackFormElement {
  /**
   * Constructs a new <code>FeedbackFormElement</code>.
   * An element in the feedback form. It can be question or an answer to the question.
   * @alias module:model/FeedbackFormElement
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FeedbackFormElement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FeedbackFormElement} obj Optional instance to populate.
   * @return {module:model/FeedbackFormElement} The populated <code>FeedbackFormElement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FeedbackFormElement();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('parent_id'))
        obj.parentId = FeedbackFormElementpropertiesid.constructFromObject(data['parent_id']);
      if (data.hasOwnProperty('question'))
        obj.question = ApiClient.convertToType(data['question'], 'String');
      if (data.hasOwnProperty('answer'))
        obj.answer = ApiClient.convertToType(data['answer'], 'String');
      if (data.hasOwnProperty('answer_type'))
        obj.answerType = ApiClient.convertToType(data['answer_type'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
FeedbackFormElement.prototype.id = undefined;

/**
 * @member {module:model/FeedbackFormElementpropertiesid} parentId
 */
FeedbackFormElement.prototype.parentId = undefined;

/**
 * Specifies the question to which the answer options will be contained in the child FeedbackFormElements
 * @member {String} question
 */
FeedbackFormElement.prototype.question = undefined;

/**
 * Specifies an answer option to which the question will be in the FeedbackFormElement specified in parent_id
 * @member {String} answer
 */
FeedbackFormElement.prototype.answer = undefined;

/**
 * Allowed values for the <code>answerType</code> property.
 * @enum {String}
 * @readonly
 */
FeedbackFormElement.AnswerTypeEnum = {
  /**
   * value: "radio"
   * @const
   */
  radio: "radio",

  /**
   * value: "checkbox"
   * @const
   */
  checkbox: "checkbox",

  /**
   * value: "text"
   * @const
   */
  text: "text"
};
/**
 * Specifies how the answer option should be rendered.
 * @member {module:model/FeedbackFormElement.AnswerTypeEnum} answerType
 */
FeedbackFormElement.prototype.answerType = undefined;

