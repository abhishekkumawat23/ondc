/*
 * ONDC Protocol API for logistics
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.9
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {GetCancellationReasonsBody} from '../model/GetCancellationReasonsBody';
import {GetFeedbackFormBody} from '../model/GetFeedbackFormBody';
import {GetRatingCategoriesBody} from '../model/GetRatingCategoriesBody';
import {GetReturnReasonsBody} from '../model/GetReturnReasonsBody';
import {InlineResponse200} from '../model/InlineResponse200';

/**
* SellerAppMetaAPIs service.
* @module api/SellerAppMetaAPIsApi
* @version 1.0.9
*/
export class SellerAppMetaAPIsApi {

    /**
    * Constructs a new SellerAppMetaAPIsApi. 
    * @alias module:api/SellerAppMetaAPIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getCancellationReasonsPost operation.
     * @callback moduleapi/SellerAppMetaAPIsApi~getCancellationReasonsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cancellation reasons from the Seller App
     * @param {Object} opts Optional parameters
     * @param {module:model/GetCancellationReasonsBody} opts.body Context header is sent as the request
     * @param {module:api/SellerAppMetaAPIsApi~getCancellationReasonsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getCancellationReasonsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['GatewaySubscriberAuth', 'GatewaySubscriberAuthNew', 'SubscriberAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/get_cancellation_reasons', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getFeedbackFormPost operation.
     * @callback moduleapi/SellerAppMetaAPIsApi~getFeedbackFormPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a feedback form from the Seller App
     * @param {Object} opts Optional parameters
     * @param {module:model/GetFeedbackFormBody} opts.body The rating value and category is sent by the Buyer App
     * @param {module:api/SellerAppMetaAPIsApi~getFeedbackFormPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getFeedbackFormPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['GatewaySubscriberAuth', 'GatewaySubscriberAuthNew', 'SubscriberAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/get_feedback_form', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getRatingCategoriesPost operation.
     * @callback moduleapi/SellerAppMetaAPIsApi~getRatingCategoriesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of categories that can be rated by the Seller App
     * @param {Object} opts Optional parameters
     * @param {module:model/GetRatingCategoriesBody} opts.body Context header is sent as the request
     * @param {module:api/SellerAppMetaAPIsApi~getRatingCategoriesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getRatingCategoriesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['GatewaySubscriberAuth', 'GatewaySubscriberAuthNew', 'SubscriberAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/get_rating_categories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getReturnReasonsPost operation.
     * @callback moduleapi/SellerAppMetaAPIsApi~getReturnReasonsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get return reasons from the Seller App
     * @param {Object} opts Optional parameters
     * @param {module:model/GetReturnReasonsBody} opts.body Context header is sent as the request
     * @param {module:api/SellerAppMetaAPIsApi~getReturnReasonsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getReturnReasonsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['GatewaySubscriberAuth', 'GatewaySubscriberAuthNew', 'SubscriberAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/get_return_reasons', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}