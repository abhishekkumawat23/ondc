/*
 * ONDC Protocol API for logistics
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.9
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OndcProtocolApiForLogistics);
  }
}(this, function(expect, OndcProtocolApiForLogistics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OndcProtocolApiForLogistics.ONDCSellerAppApi();
  });

  describe('(package)', function() {
    describe('ONDCSellerAppApi', function() {
      describe('cancelPost', function() {
        it('should call cancelPost successfully', function(done) {
          // TODO: uncomment, update parameter values for cancelPost call and complete the assertions
          /*
          var opts = {};

          instance.cancelPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('confirmPost', function() {
        it('should call confirmPost successfully', function(done) {
          // TODO: uncomment, update parameter values for confirmPost call and complete the assertions
          /*
          var opts = {};

          instance.confirmPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('initPost', function() {
        it('should call initPost successfully', function(done) {
          // TODO: uncomment, update parameter values for initPost call and complete the assertions
          /*
          var opts = {};

          instance.initPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ratingPost', function() {
        it('should call ratingPost successfully', function(done) {
          // TODO: uncomment, update parameter values for ratingPost call and complete the assertions
          /*
          var opts = {};

          instance.ratingPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('searchPost', function() {
        it('should call searchPost successfully', function(done) {
          // TODO: uncomment, update parameter values for searchPost call and complete the assertions
          /*
          var opts = {};

          instance.searchPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('selectPost', function() {
        it('should call selectPost successfully', function(done) {
          // TODO: uncomment, update parameter values for selectPost call and complete the assertions
          /*
          var opts = {};

          instance.selectPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('statusPost', function() {
        it('should call statusPost successfully', function(done) {
          // TODO: uncomment, update parameter values for statusPost call and complete the assertions
          /*
          var opts = {};

          instance.statusPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('supportPost', function() {
        it('should call supportPost successfully', function(done) {
          // TODO: uncomment, update parameter values for supportPost call and complete the assertions
          /*
          var opts = {};

          instance.supportPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trackPost', function() {
        it('should call trackPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trackPost call and complete the assertions
          /*
          var opts = {};

          instance.trackPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updatePost', function() {
        it('should call updatePost successfully', function(done) {
          // TODO: uncomment, update parameter values for updatePost call and complete the assertions
          /*
          var opts = {};

          instance.updatePost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForLogistics.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
