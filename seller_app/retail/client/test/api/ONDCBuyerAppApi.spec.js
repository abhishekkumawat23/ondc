/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OndcProtocolApiForRetailGroceryFb);
  }
}(this, function(expect, OndcProtocolApiForRetailGroceryFb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OndcProtocolApiForRetailGroceryFb.ONDCBuyerAppApi();
  });

  describe('(package)', function() {
    describe('ONDCBuyerAppApi', function() {
      describe('onCancelPost', function() {
        it('should call onCancelPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onCancelPost call and complete the assertions
          /*
          var opts = {};

          instance.onCancelPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onConfirmPost', function() {
        it('should call onConfirmPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onConfirmPost call and complete the assertions
          /*
          var opts = {};

          instance.onConfirmPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onInitPost', function() {
        it('should call onInitPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onInitPost call and complete the assertions
          /*
          var opts = {};

          instance.onInitPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onRatingPost', function() {
        it('should call onRatingPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onRatingPost call and complete the assertions
          /*
          var opts = {};

          instance.onRatingPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onSearchPost', function() {
        it('should call onSearchPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onSearchPost call and complete the assertions
          /*
          var opts = {};

          instance.onSearchPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse2001);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onSelectPost', function() {
        it('should call onSelectPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onSelectPost call and complete the assertions
          /*
          var opts = {};

          instance.onSelectPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onStatusPost', function() {
        it('should call onStatusPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onStatusPost call and complete the assertions
          /*
          var opts = {};

          instance.onStatusPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onSupportPost', function() {
        it('should call onSupportPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onSupportPost call and complete the assertions
          /*
          var opts = {};

          instance.onSupportPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onTrackPost', function() {
        it('should call onTrackPost successfully', function(done) {
          // TODO: uncomment, update parameter values for onTrackPost call and complete the assertions
          /*
          var opts = {};

          instance.onTrackPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('onUpdatePost', function() {
        it('should call onUpdatePost successfully', function(done) {
          // TODO: uncomment, update parameter values for onUpdatePost call and complete the assertions
          /*
          var opts = {};

          instance.onUpdatePost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
