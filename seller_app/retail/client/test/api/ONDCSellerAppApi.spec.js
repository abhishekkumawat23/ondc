/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OndcProtocolApiForRetailGroceryFb);
  }
}(this, function(expect, OndcProtocolApiForRetailGroceryFb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OndcProtocolApiForRetailGroceryFb.ONDCSellerAppApi();
  });

  describe('(package)', function() {
    describe('ONDCSellerAppApi', function() {
      describe('cancelPOST', function() {
        it('should call cancelPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for cancelPOST call and complete the assertions
          /*
          var opts = {};

          instance.cancelPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('confirmPOST', function() {
        it('should call confirmPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for confirmPOST call and complete the assertions
          /*
          var opts = {};

          instance.confirmPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('initPOST', function() {
        it('should call initPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for initPOST call and complete the assertions
          /*
          var opts = {};

          instance.initPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ratingPOST', function() {
        it('should call ratingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for ratingPOST call and complete the assertions
          /*
          var opts = {};

          instance.ratingPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('searchPOST', function() {
        it('should call searchPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for searchPOST call and complete the assertions
          /*
          var opts = {};

          instance.searchPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('selectPOST', function() {
        it('should call selectPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for selectPOST call and complete the assertions
          /*
          var opts = {};

          instance.selectPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('statusPOST', function() {
        it('should call statusPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for statusPOST call and complete the assertions
          /*
          var opts = {};

          instance.statusPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('supportPOST', function() {
        it('should call supportPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for supportPOST call and complete the assertions
          /*
          var opts = {};

          instance.supportPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trackPOST', function() {
        it('should call trackPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for trackPOST call and complete the assertions
          /*
          var opts = {};

          instance.trackPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updatePOST', function() {
        it('should call updatePOST successfully', function(done) {
          // TODO: uncomment, update parameter values for updatePOST call and complete the assertions
          /*
          var opts = {};

          instance.updatePOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
