/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ItemQuantityAllocated} from './ItemQuantityAllocated';
import {ItemQuantityMaximum} from './ItemQuantityMaximum';

/**
 * The ItemQuantity model module.
 * @module model/ItemQuantity
 * @version 1.0.13
 */
export class ItemQuantity {
  /**
   * Constructs a new <code>ItemQuantity</code>.
   * Describes count or amount of an item
   * @alias module:model/ItemQuantity
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ItemQuantity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ItemQuantity} obj Optional instance to populate.
   * @return {module:model/ItemQuantity} The populated <code>ItemQuantity</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ItemQuantity();
      if (data.hasOwnProperty('allocated'))
        obj.allocated = ItemQuantityAllocated.constructFromObject(data['allocated']);
      if (data.hasOwnProperty('available'))
        obj.available = ItemQuantityAllocated.constructFromObject(data['available']);
      if (data.hasOwnProperty('maximum'))
        obj.maximum = ItemQuantityMaximum.constructFromObject(data['maximum']);
      if (data.hasOwnProperty('minimum'))
        obj.minimum = ItemQuantityAllocated.constructFromObject(data['minimum']);
      if (data.hasOwnProperty('selected'))
        obj.selected = ItemQuantityAllocated.constructFromObject(data['selected']);
    }
    return obj;
  }
}

/**
 * @member {module:model/ItemQuantityAllocated} allocated
 */
ItemQuantity.prototype.allocated = undefined;

/**
 * @member {module:model/ItemQuantityAllocated} available
 */
ItemQuantity.prototype.available = undefined;

/**
 * @member {module:model/ItemQuantityMaximum} maximum
 */
ItemQuantity.prototype.maximum = undefined;

/**
 * @member {module:model/ItemQuantityAllocated} minimum
 */
ItemQuantity.prototype.minimum = undefined;

/**
 * @member {module:model/ItemQuantityAllocated} selected
 */
ItemQuantity.prototype.selected = undefined;

