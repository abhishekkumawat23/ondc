/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {FeedbackUrlParams} from './FeedbackUrlParams';

/**
 * The FeedbackUrl model module.
 * @module model/FeedbackUrl
 * @version 1.0.13
 */
export class FeedbackUrl {
  /**
   * Constructs a new <code>FeedbackUrl</code>.
   * Describes how a feedback URL will be sent by the Seller App
   * @alias module:model/FeedbackUrl
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FeedbackUrl</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FeedbackUrl} obj Optional instance to populate.
   * @return {module:model/FeedbackUrl} The populated <code>FeedbackUrl</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FeedbackUrl();
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('tl_method'))
        obj.tlMethod = ApiClient.convertToType(data['tl_method'], 'String');
      if (data.hasOwnProperty('params'))
        obj.params = FeedbackUrlParams.constructFromObject(data['params']);
    }
    return obj;
  }
}

/**
 * feedback URL sent by the Seller App
 * @member {String} url
 */
FeedbackUrl.prototype.url = undefined;

/**
 * Allowed values for the <code>tlMethod</code> property.
 * @enum {String}
 * @readonly
 */
FeedbackUrl.TlMethodEnum = {
  /**
   * value: "http/get"
   * @const
   */
  get: "http/get",

  /**
   * value: "http/post"
   * @const
   */
  post: "http/post"
};
/**
 * @member {module:model/FeedbackUrl.TlMethodEnum} tlMethod
 */
FeedbackUrl.prototype.tlMethod = undefined;

/**
 * @member {module:model/FeedbackUrlParams} params
 */
FeedbackUrl.prototype.params = undefined;

