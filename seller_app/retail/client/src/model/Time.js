/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Duration} from './Duration';
import {Schedule} from './Schedule';
import {TimeRange} from './TimeRange';

/**
 * The Time model module.
 * @module model/Time
 * @version 1.0.13
 */
export class Time {
  /**
   * Constructs a new <code>Time</code>.
   * Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations
   * @alias module:model/Time
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Time</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Time} obj Optional instance to populate.
   * @return {module:model/Time} The populated <code>Time</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Time();
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'Date');
      if (data.hasOwnProperty('duration'))
        obj.duration = Duration.constructFromObject(data['duration']);
      if (data.hasOwnProperty('range'))
        obj.range = TimeRange.constructFromObject(data['range']);
      if (data.hasOwnProperty('days'))
        obj.days = ApiClient.convertToType(data['days'], 'String');
      if (data.hasOwnProperty('schedule'))
        obj.schedule = Schedule.constructFromObject(data['schedule']);
    }
    return obj;
  }
}

/**
 * @member {String} label
 */
Time.prototype.label = undefined;

/**
 * @member {Date} timestamp
 */
Time.prototype.timestamp = undefined;

/**
 * @member {module:model/Duration} duration
 */
Time.prototype.duration = undefined;

/**
 * @member {module:model/TimeRange} range
 */
Time.prototype.range = undefined;

/**
 * comma separated values representing days of the week
 * @member {String} days
 */
Time.prototype.days = undefined;

/**
 * @member {module:model/Schedule} schedule
 */
Time.prototype.schedule = undefined;

