/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OndcProtocolApiForRetailGroceryFb);
  }
}(this, function(expect, OndcProtocolApiForRetailGroceryFb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OndcProtocolApiForRetailGroceryFb.BuyerAppMetaAPIsApi();
  });

  describe('(package)', function() {
    describe('BuyerAppMetaAPIsApi', function() {
      describe('cancellationReasonsPOST', function() {
        it('should call cancellationReasonsPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for cancellationReasonsPOST call and complete the assertions
          /*
          var opts = {};

          instance.cancellationReasonsPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('feedbackCategoriesPOST', function() {
        it('should call feedbackCategoriesPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for feedbackCategoriesPOST call and complete the assertions
          /*
          var opts = {};

          instance.feedbackCategoriesPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('feedbackFormPOST', function() {
        it('should call feedbackFormPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for feedbackFormPOST call and complete the assertions
          /*
          var opts = {};

          instance.feedbackFormPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ratingCategoriesPOST', function() {
        it('should call ratingCategoriesPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for ratingCategoriesPOST call and complete the assertions
          /*
          var opts = {};

          instance.ratingCategoriesPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('returnReasonsPOST', function() {
        it('should call returnReasonsPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for returnReasonsPOST call and complete the assertions
          /*
          var opts = {};

          instance.returnReasonsPOST(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(OndcProtocolApiForRetailGroceryFb.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
