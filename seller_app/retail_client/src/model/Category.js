/*
 * ONDC Protocol API for retail (grocery, f&b)
 * ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food This is an adaptation of Beckn Core version 0.9.3
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CategoryId} from './CategoryId';
import {Descriptor} from './Descriptor';
import {Tags} from './Tags';
import {Time} from './Time';

/**
 * The Category model module.
 * @module model/Category
 * @version 1.0.13
 */
export class Category {
  /**
   * Constructs a new <code>Category</code>.
   * Describes a category
   * @alias module:model/Category
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Category</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Category} obj Optional instance to populate.
   * @return {module:model/Category} The populated <code>Category</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Category();
      if (data.hasOwnProperty('id'))
        obj.id = CategoryId.constructFromObject(data['id']);
      if (data.hasOwnProperty('parent_category_id'))
        obj.parentCategoryId = ApiClient.convertToType(data['parent_category_id'], 'String');
      if (data.hasOwnProperty('descriptor'))
        obj.descriptor = Descriptor.constructFromObject(data['descriptor']);
      if (data.hasOwnProperty('time'))
        obj.time = Time.constructFromObject(data['time']);
      if (data.hasOwnProperty('tags'))
        obj.tags = Tags.constructFromObject(data['tags']);
    }
    return obj;
  }
}

/**
 * @member {module:model/CategoryId} id
 */
Category.prototype.id = undefined;

/**
 * Allowed values for the <code>parentCategoryId</code> property.
 * @enum {String}
 * @readonly
 */
Category.ParentCategoryIdEnum = {
  /**
   * value: "Grocery"
   * @const
   */
  grocery: "Grocery",

  /**
   * value: "F&B"
   * @const
   */
  FB: "F&B",

  /**
   * value: "Fashion"
   * @const
   */
  fashion: "Fashion"
};
/**
 * Unique id of the parent category
 * @member {module:model/Category.ParentCategoryIdEnum} parentCategoryId
 */
Category.prototype.parentCategoryId = undefined;

/**
 * @member {module:model/Descriptor} descriptor
 */
Category.prototype.descriptor = undefined;

/**
 * @member {module:model/Time} time
 */
Category.prototype.time = undefined;

/**
 * @member {module:model/Tags} tags
 */
Category.prototype.tags = undefined;

